[{"F:\\Kodingan\\React\\Tanipedia\\src\\index.js":"1","F:\\Kodingan\\React\\Tanipedia\\src\\App.js":"2","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\index.js":"3","F:\\Kodingan\\React\\Tanipedia\\src\\routes\\Routes.js":"4","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Sidebar.js":"5","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\pupuk.js":"6","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\panen.js":"7","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\lahan.js":"8","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\users.js":"9","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\master.js":"10","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Topbar.js":"11","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PublicRoute.js":"12","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PrivateRoute.js":"13","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\NotFound.js":"14","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\Common.js":"15","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\Home.js":"16","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\EditUser.js":"17","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\DetailUserContainer.js":"18","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\Pupuk.js":"19","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\AuthPages\\Login.js":"20","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\CreateLahan.js":"21","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\DetailPupukContainer.js":"22","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\DetailPanenContainer.js":"23","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\DetailLahanContainer.js":"24","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\Lahan.js":"25","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\EditPupuk.js":"26","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\Panen.js":"27","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\CreatePanen.js":"28","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Dashboard\\Dashboard.js":"29","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\CreatePupuk.js":"30","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\EditPanen.js":"31","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\CreateUser.js":"32","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\EditLahan.js":"33","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\pupukAction.js":"34","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\userAction.js":"35","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\lahanAction.js":"36","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\masterAction.js":"37","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\panenAction.js":"38","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Logout.js":"39","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPupuk.js":"40","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentLahan.js":"41","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPupuk.js":"42","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentUser.js":"43","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPanen.js":"44","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentLahan.js":"45","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPanen.js":"46","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailUser.js":"47","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailLahan.js":"48","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPupuk.js":"49","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentUser.js":"50","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPanen.js":"51","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Calender\\EventCalender.js":"52","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\UserValidation.js":"53","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormPict.js":"54","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\admin.js":"55","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\adminAction.js":"56","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Admin\\Admin.js":"57","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormAdmin.js":"58"},{"size":966,"mtime":1614141301739,"results":"59","hashOfConfig":"60"},{"size":719,"mtime":1614144487443,"results":"61","hashOfConfig":"60"},{"size":401,"mtime":1615657354279,"results":"62","hashOfConfig":"60"},{"size":3782,"mtime":1615658087943,"results":"63","hashOfConfig":"60"},{"size":2418,"mtime":1615544381646,"results":"64","hashOfConfig":"60"},{"size":1211,"mtime":1613579140201,"results":"65","hashOfConfig":"60"},{"size":1211,"mtime":1613621278796,"results":"66","hashOfConfig":"60"},{"size":1461,"mtime":1615094206288,"results":"67","hashOfConfig":"60"},{"size":1488,"mtime":1615539126704,"results":"68","hashOfConfig":"60"},{"size":3821,"mtime":1614932864150,"results":"69","hashOfConfig":"60"},{"size":1693,"mtime":1614176660223,"results":"70","hashOfConfig":"60"},{"size":471,"mtime":1613139683168,"results":"71","hashOfConfig":"60"},{"size":531,"mtime":1613136265604,"results":"72","hashOfConfig":"60"},{"size":656,"mtime":1614659832715,"results":"73","hashOfConfig":"60"},{"size":1505,"mtime":1615660960844,"results":"74","hashOfConfig":"60"},{"size":529,"mtime":1614266042526,"results":"75","hashOfConfig":"60"},{"size":1479,"mtime":1615544132860,"results":"76","hashOfConfig":"60"},{"size":506,"mtime":1614770624459,"results":"77","hashOfConfig":"60"},{"size":537,"mtime":1614065857257,"results":"78","hashOfConfig":"60"},{"size":8035,"mtime":1615660971867,"results":"79","hashOfConfig":"60"},{"size":1125,"mtime":1614665933489,"results":"80","hashOfConfig":"60"},{"size":510,"mtime":1614779578667,"results":"81","hashOfConfig":"60"},{"size":522,"mtime":1614782492042,"results":"82","hashOfConfig":"60"},{"size":512,"mtime":1614780577053,"results":"83","hashOfConfig":"60"},{"size":529,"mtime":1614066000805,"results":"84","hashOfConfig":"60"},{"size":1369,"mtime":1614936934816,"results":"85","hashOfConfig":"60"},{"size":537,"mtime":1614066425251,"results":"86","hashOfConfig":"60"},{"size":1143,"mtime":1614244574021,"results":"87","hashOfConfig":"60"},{"size":6061,"mtime":1615660968564,"results":"88","hashOfConfig":"60"},{"size":1123,"mtime":1614936908198,"results":"89","hashOfConfig":"60"},{"size":1377,"mtime":1614783015371,"results":"90","hashOfConfig":"60"},{"size":1193,"mtime":1615540794003,"results":"91","hashOfConfig":"60"},{"size":1377,"mtime":1614783007384,"results":"92","hashOfConfig":"60"},{"size":3897,"mtime":1614234245185,"results":"93","hashOfConfig":"60"},{"size":5140,"mtime":1615543785713,"results":"94","hashOfConfig":"60"},{"size":4559,"mtime":1615094135915,"results":"95","hashOfConfig":"60"},{"size":10283,"mtime":1614935109009,"results":"96","hashOfConfig":"60"},{"size":3897,"mtime":1613621081837,"results":"97","hashOfConfig":"60"},{"size":1063,"mtime":1614043073293,"results":"98","hashOfConfig":"60"},{"size":5349,"mtime":1615091030862,"results":"99","hashOfConfig":"60"},{"size":13226,"mtime":1615120566470,"results":"100","hashOfConfig":"60"},{"size":6754,"mtime":1614927039384,"results":"101","hashOfConfig":"60"},{"size":7986,"mtime":1615537175232,"results":"102","hashOfConfig":"60"},{"size":8705,"mtime":1615121681413,"results":"103","hashOfConfig":"60"},{"size":7008,"mtime":1614927142144,"results":"104","hashOfConfig":"60"},{"size":5138,"mtime":1614782922140,"results":"105","hashOfConfig":"60"},{"size":8645,"mtime":1615647115708,"results":"106","hashOfConfig":"60"},{"size":7397,"mtime":1614782003736,"results":"107","hashOfConfig":"60"},{"size":4807,"mtime":1614781237259,"results":"108","hashOfConfig":"60"},{"size":22089,"mtime":1615541150730,"results":"109","hashOfConfig":"60"},{"size":7290,"mtime":1614927097429,"results":"110","hashOfConfig":"60"},{"size":2534,"mtime":1614926539144,"results":"111","hashOfConfig":"60"},{"size":1360,"mtime":1614217143457,"results":"112","hashOfConfig":"60"},{"size":7392,"mtime":1615543848430,"results":"113","hashOfConfig":"60"},{"size":471,"mtime":1615657985261,"results":"114","hashOfConfig":"60"},{"size":767,"mtime":1615658033356,"results":"115","hashOfConfig":"60"},{"size":1041,"mtime":1615658646726,"results":"116","hashOfConfig":"60"},{"size":3403,"mtime":1615659145891,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"13lmiis",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Kodingan\\React\\Tanipedia\\src\\index.js",[],["252","253"],"F:\\Kodingan\\React\\Tanipedia\\src\\App.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\index.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\routes\\Routes.js",["254","255"],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Sidebar.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\pupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\panen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\lahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\users.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\master.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Topbar.js",["256","257","258"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { getName } from \"../../Utils/Common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logout from \"./Logout\";\r\nimport { AlignLeft } from \"react-feather\";\r\nconst Topbar = ({ toggleSidebar }) => {\r\n  const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n  const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n  const name = getName();\r\n\r\n  return (\r\n    <Navbar\r\n      color=\"light\"\r\n      light\r\n      className=\"navbar shadow-lg p-3 mb-5 bg-white rounded  \"\r\n      expand=\"md\"\r\n    >\r\n      <Button\r\n        color=\"info\"\r\n        onClick={toggleSidebar}\r\n        className=\"p-1\"\r\n        // style={{ border: \"2px solid black\" }}\r\n      >\r\n        <AlignLeft size={24} />\r\n      </Button>\r\n      {/* <NavbarToggler onClick={toggleTopbar} /> */}\r\n      {/* <Collapse isOpen={topbarIsOpen} navbar> */}\r\n      <Nav className=\"ml-auto\" navbar>\r\n        <NavItem>\r\n          <NavLink tag={Link} to={\"/page-1\"} className=\"text-capitalize\">\r\n            Selamat Datang {name}\r\n          </NavLink>\r\n        </NavItem>\r\n        {/* <NavItem>\r\n            <NavLink tag={Link} to={\"/page-2\"}></NavLink>\r\n          </NavItem> */}\r\n        {/* <NavItem>\r\n            <NavLink tag={Link} to={\"/page-3\"}>\r\n              page 3\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to={\"/page-4\"}>\r\n              page 4\r\n            </NavLink>\r\n          </NavItem> */}\r\n      </Nav>\r\n      {/* </Collapse>{\" \"} */}\r\n      <Logout />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PublicRoute.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PrivateRoute.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\NotFound.js",["259"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport Ilustrasi from \"../assets/404.PNG\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n      <div className=\"text-center\">\r\n        {/* <p className=\"text-center\">Oops.. Halaman Tidak Ditemukan</p> */}\r\n        <img src={Ilustrasi} className=\"img-fluid w-75\" />\r\n        <p>\r\n          <Link className=\"btn btn-info mt-5\" to=\"/\">\r\n            Back to Dashboard\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\Common.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\Home.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\EditUser.js",["260"],"import React, { Component } from \"react\";\r\nimport FormComponentUser from \"../../../component/Form/FormComponentUser\";\r\nimport {\r\n  getUsersDetail,\r\n  putUsersUpdate,\r\n  deleteDataUser,\r\n} from \"../../../actions/userAction\";\r\nimport swal from \"sweetalert\";\r\nimport { connect } from \"react-redux\";\r\nimport FormPict from \"../../../component/Form/FormPict\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataUser: state.users.getResponseDataUser,\r\n    errorResponseDataUser: state.users.errorResponseDataUser,\r\n  };\r\n};\r\n\r\nclass EditUser extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getUsersDetail(this.props.match.params.id));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.props.dispatch(putUsersUpdate(data, this.props.match.params.id));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.getResponseDataUser || this.props.errorResponseDataUser) {\r\n      console.log(this.props);\r\n      if (this.props.errorResponseDataUser) {\r\n        swal(\"Failed!\", this.props.errorResponseDataUser, \"error\");\r\n      } else {\r\n        swal({\r\n          title: \"User Updated !\",\r\n          icon: \"success\",\r\n          button: \"Oke\",\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <div>\r\n          <h4 className=\"text-secondary\">Edit User</h4>\r\n          <FormPict />\r\n          <FormComponentUser onSubmit={(data) => this.handleSubmit(data)} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EditUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\DetailUserContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\Pupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\AuthPages\\Login.js",["261","262","263","264","265","266","267"],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\CreateLahan.js",["268"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postLahanCreate } from \"../../../actions/lahanAction\";\r\nimport FormComponentLahan from \"../../../component/Form/FormComponentLahan\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataLahan: state.lahan.getResponseDataLahan,\r\n    errorResponseDataLahan: state.lahan.errorResponseDataLahan,\r\n  };\r\n};\r\nclass CreateLahan extends Component {\r\n  handleSubmit(data) {\r\n    \r\n    this.props.dispatch(postLahanCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataLahan || this.props.errorResponseDataLahan) {\r\n      if (this.props.getResponseDataLahan) {\r\n        swal(\"Lahan Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Lahan</h4>\r\n        <FormComponentLahan onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreateLahan);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\DetailPupukContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\DetailPanenContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\DetailLahanContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\Lahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\EditPupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\Panen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\CreatePanen.js",["269"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postPanenCreate } from \"../../../actions/panenAction\";\r\nimport FormComponentPanen from \"../../../component/Form/FormComponentPanen\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataPanen: state.panen.getResponseDataPanen,\r\n    errorResponseDataPanen: state.panen.errorResponseDataPanen,\r\n  };\r\n};\r\nclass CreatePanen extends Component {\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n    this.props.dispatch(postPanenCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataPanen || this.props.errorResponseDataPanen) {\r\n      if (this.props.getResponseDataPanen) {\r\n        swal(\"Panen Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Panen</h4>\r\n        <FormComponentPanen onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreatePanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Dashboard\\Dashboard.js",["270","271","272","273","274","275","276"],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\CreatePupuk.js",["277"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postPupukCreate } from \"../../../actions/pupukAction\";\r\nimport FormComponentPupuk from \"../../../component/Form/FormComponentPupuk\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataPupuk: state.pupuk.getResponseDataPupuk,\r\n    errorResponseDataPupuk: state.pupuk.errorResponseDataPupuk,\r\n  };\r\n};\r\nclass CreatePupuk extends Component {\r\n  handleSubmit(data) {\r\n  \r\n    this.props.dispatch(postPupukCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataPupuk || this.props.errorResponseDataPupuk) {\r\n      if (this.props.getResponseDataPupuk) {\r\n        swal(\"Pupuk Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Pupuk</h4>\r\n        <FormComponentPupuk onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreatePupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\EditPanen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\CreateUser.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\EditLahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\pupukAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\userAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\lahanAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\masterAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\panenAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Logout.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentLahan.js",["278","279"],"import React, { Component } from \"react\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport UserValidation from \"../../Validations/UserValidation\";\r\nimport {\r\n  getProvinsiList,\r\n  getKabupatenList,\r\n  getKecamatanList,\r\n  getKelurahanList,\r\n  getTipeUserList,\r\n} from \"../../actions/masterAction\";\r\nimport { getUsersList } from \"../../actions/userAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.lahan.getLahanDetail.id,\r\n      kategori: state.lahan.getLahanDetail.kategori,\r\n      luas: state.lahan.getLahanDetail.luas,\r\n      satuan: state.lahan.getLahanDetail.satuan,\r\n      alamat: state.lahan.getLahanDetail.alamat,\r\n      usia_tanam: state.lahan.getLahanDetail.usia_tanam,\r\n      id_petani: state.lahan.getLahanDetail.id_petani,\r\n      petani: state.lahan.getLahanDetail.petani,\r\n      desa: state.lahan.getLahanDetail.desa,\r\n      kecamatan: state.lahan.getLahanDetail.kecamatan,\r\n      kabupaten: state.lahan.getLahanDetail.kabupaten,\r\n      provinsi: state.lahan.getLahanDetail.provinsi,\r\n      kodepos: state.lahan.getLahanDetail.kodepos,\r\n      keterangan: state.lahan.getLahanDetail.keterangan,\r\n    },\r\n    master: {\r\n      provinsi: state.master.getProvinsiList,\r\n      kabupaten: state.master.getKabupatenList,\r\n      kecamatan: state.master.getKecamatanList,\r\n      kelurahan: state.master.getKelurahanList,\r\n      tipeUser: state.master.getTipeUserList,\r\n    },\r\n \r\n    user: {\r\n      petani: state.users.getUsersList,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormComponentLahan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id_provinsi: 0,\r\n      id_kabupaten: 0,\r\n      id_kecamatan: 0,\r\n      id_kelurahan: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getTipeUserList());\r\n    this.props.dispatch(getProvinsiList());\r\n    this.props.dispatch(getUsersList());\r\n  }\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    disabled,\r\n    readOnly,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{input}\" className=\"col-form-label\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Provinsi\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_provinsi: e.target.selectedOptions[0].id,\r\n                  id_kabupaten: 0,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n\r\n                this.props.dispatch(\r\n                  getKabupatenList(e.target.selectedOptions[0].id)\r\n                );\r\n                {\r\n                  console.log(\"id provinsi : \", e.target.selectedOptions[0].id);\r\n                  console.log(e);\r\n                }\r\n              }}\r\n            >\r\n              <option value={0}>Provinsi</option>\r\n              {this.props.master.provinsi &&\r\n                this.props.master.provinsi.map((item, i) => {\r\n                  return (\r\n                    <option\r\n                      key={item.id}\r\n                      value={item.id}\r\n                      \r\n                    >\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kabupaten\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kabupaten: e.target.selectedOptions[0].id,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKecamatanList(\r\n                    this.state.id_provinsi,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n                console.log(\"id kabupaten : \", e.target.selectedOptions[0].id);\r\n                console.log(e);\r\n              }}\r\n            >\r\n              <option value={0}>Kabupaten / Kota</option>\r\n              {this.props.master.kabupaten &&\r\n                this.props.master.kabupaten.map((item,i) => {\r\n                  return (\r\n                    <>\r\n                      <option\r\n                        key={item.id}\r\n                        value={item.id}\r\n                        \r\n                      >\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kecamatan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kecamatan: e.target.selectedOptions[0].id,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKelurahanList(\r\n                    this.state.id_provinsi,\r\n                    this.state.id_kabupaten,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n                console.log(e);\r\n                console.log(\"id kecamatan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kecamatan</option>\r\n              {this.props.master.kecamatan &&\r\n                this.props.master.kecamatan.map((item,i) => {\r\n                  return (\r\n                    <option key={item.id} value={item.id} >\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kelurahan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kelurahan: e.target.selectedOptions[0].id,\r\n                });\r\n                console.log(\"Id kelurahan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kelurahan</option>\r\n              {this.props.master.kelurahan &&\r\n                this.props.master.kelurahan.map((item,i) => {\r\n                  return (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Tipe User\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.tipeUser &&\r\n                this.props.master.tipeUser.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Petani\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  id_petani: e.target.value,\r\n                });\r\n              \r\n              }}\r\n            >\r\n              <option value={0}></option>\r\n              {this.props.user.petani &&\r\n                this.props.user.petani.map((item,i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n     \r\n        ) : label === \"Satuan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n            >\r\n              <option value={101}>Kg</option>\r\n            </Input>\r\n          </>\r\n        ) : (\r\n          <Input\r\n            autoComplete=\"off\"\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n            readOnly={readOnly}\r\n          ></Input>\r\n        )}\r\n        {touched &&\r\n          ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n            (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"kategori\"\r\n                component={this.renderField}\r\n                label=\"Tipe User\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"number\"\r\n                name=\"luas\"\r\n                component={this.renderField}\r\n                label=\"Luas\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"satuan\"\r\n                component={this.renderField}\r\n                label=\"Satuan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"alamat\"\r\n                component={this.renderField}\r\n                label=\"Alamat\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"usia_tanam\"\r\n                component={this.renderField}\r\n                label=\"Usia Tanam\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_petani\"\r\n                component={this.renderField}\r\n                label=\"Petani\"\r\n              />\r\n            </FormGroup>\r\n          </Col>{\" \"}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_provinsi\"\r\n                component={this.renderField}\r\n                label=\"Provinsi\"\r\n              />\r\n            </FormGroup>\r\n          </Col>{\" \"}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_kabupaten\"\r\n                component={this.renderField}\r\n                label=\"Kabupaten\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_kecamatan\"\r\n                component={this.renderField}\r\n                label=\"Kecamatan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_desa\"\r\n                component={this.renderField}\r\n                label=\"Kelurahan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"number\"\r\n                name=\"kodepos\"\r\n                component={this.renderField}\r\n                label=\"Kode Pos\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"keterangan\"\r\n                component={this.renderField}\r\n                label=\"Keterangan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"info\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponentLahan = reduxForm({\r\n  form: \"CreateLahan\",\r\n  // validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponentLahan);\r\nexport default connect(mapStateToProps, null)(FormComponentLahan);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPupuk.js",["280","281","282"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus } from \"react-feather\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deletePupuk } from \"../../actions/pupukAction\";\r\n\r\nconst handleClick = (dispatch, id, jenis_pupuk) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan pupuk dengan nama  : \" + jenis_pupuk,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deletePupuk(id));\r\n      swal({\r\n        title: \"Berhasil Delete Pupuk!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n//buat sorted\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\n\r\n//buat search\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukList: state.pupuk.getPupukList,\r\n    errorPupukList: state.pupuk.errorPupukList,\r\n  };\r\n};\r\n\r\nconst TableComponentPupuk = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getPupukList.length,\r\n      },\r\n    ],\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"petani\",\r\n      text: \"Identitas\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.petani}</small>\r\n            <small>{row.poktan}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"jenis_pupuk\",\r\n      text: \"Jenis\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>Jenis : {row.jenis_pupuk} | </small>\r\n            <small>Kapasitas : {row.kapasitas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tgl_distribusi\",\r\n      text: \"Tanggal Distribusi\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Action\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-pupuk/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle\r\n                className=\"ml-1\"\r\n                color=\"transparent\"\r\n                size=\"sm\"\r\n                outline\r\n              >\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-pupuk/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() =>\r\n                    handleClick(props.dispatch, row.id, row.jenis_pupuk)\r\n                  }\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const data = props.getPupukList;\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {props.getPupukList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getPupukList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-pupuk\">\r\n                <button type=\"button\" className=\"btn btn-light rounded\">\r\n                  <span >\r\n                    Tambah Pupuk <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorPupukList ? (\r\n            <h2>{props.errorPupukList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentPupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentUser.js",["283","284","285","286","287","288","289","290"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deleteUser, getUsersList } from \"../../actions/userAction\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus, User } from \"react-feather\";\r\nimport Photo from \"../../assets/user.png\";\r\nimport Kirito from \"../../assets/tester.jpg\";\r\n\r\nconst handleClick = (dispatch, id, nama) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus user dengan nama : \" + nama,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteUser(id));\r\n\r\n      swal({\r\n        title: \"Berhasil Delete User!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getUsersList: state.users.getUsersList,\r\n    errorUsersList: state.users.errorUsersList,\r\n  };\r\n};\r\n\r\nconst TableComponentUser = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getUsersList.length,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"nama\",\r\n      text: \"Identitas\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <div className=\"d-flex align-items-center \">\r\n              <div className=\"\">\r\n                {row.foto_profil ? (\r\n                  <div style={{ width: \"50px\" }}>\r\n                    <img\r\n                      src={row.foto_profil}\r\n                      className=\"rounded-circle img-fluid border border-primary \"\r\n                    ></img>\r\n                  </div>\r\n                ) : (\r\n                  <img\r\n                    src={Photo}\r\n                    style={{ width: \"50px\" }}\r\n                    className=\"rounded-circle border border-primary\"\r\n                  ></img>\r\n                )}\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <small>{row.nama}</small>\r\n                <br />\r\n                <small>{row.telp}</small>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"pekerjaan\",\r\n      text: \"Pekerjaan\",\r\n\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <h6>{row.pekerjaan}</h6>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Riwayat\",\r\n\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.gender} - </small>\r\n\r\n            <small>{row.pendidikan}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"provinsi\",\r\n      text: \"Provinsi\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>Desa : {row.desa} </small>\r\n            <br />\r\n            <small>Kecamatan : {row.kecamatan} </small>\r\n            <br />\r\n            <small>Kabupaten : {row.kabupaten} </small>\r\n            <br />\r\n            <small>Provinsi : {row.provinsi} </small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      text: \"Action\",\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-user/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle className=\"ml-1\" color=\"transparent\" size=\"sm\">\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-user/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() => handleClick(props.dispatch, row.id, row.nama)}\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {props.getUsersList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getUsersList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-user\">\r\n                <button type=\"button\" className=\"btn btn-light rounded \">\r\n                  <span>\r\n                    Tambah Petani <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorUsersList ? (\r\n            <h2>{props.errorUsersList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPanen.js",["291"],"import React, { Component } from \"react\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport UserValidation from \"../../Validations/UserValidation\";\r\nimport { getUsersList } from \"../../actions/userAction\";\r\nimport { getTipeUserList, getKomoditasList } from \"../../actions/masterAction\";\r\nimport { getFilterLahan } from \"../../actions/lahanAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.panen.getPanenDetail.id,\r\n      kategori: state.panen.getPanenDetail.kategori,\r\n      varietas: state.panen.getPanenDetail.varietas,\r\n      total_panen: state.panen.getPanenDetail.id_petani,\r\n      satuan: state.panen.getPanenDetail.satuan,\r\n      usia_tanam: state.panen.getPanenDetail.usia_tanam,\r\n      id_petani: state.panen.getPanenDetail.id_petani,\r\n      id_instansi: state.panen.getPanenDetail.id_instansi,\r\n      id_lahan: state.panen.getPanenDetail.id_lahan,\r\n      tgl_panen: state.panen.getPanenDetail.tgl_panen,\r\n      tgl_tanam: state.panen.getPanenDetail.tgl_tanam,\r\n      tgl_panen: state.panen.getPanenDetail.tgl_panen,\r\n      keterangan: state.panen.getPanenDetail.keterangan,\r\n    },\r\n    lahan: {\r\n      filter: state.lahan.getFilterLahan,\r\n    },\r\n    master: {\r\n      tipeUser: state.master.getTipeUserList,\r\n      komoditas: state.master.getKomoditasList,\r\n    },\r\n    user: {\r\n      petani: state.users.getUsersList,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormComponentPanen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id_petani: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getTipeUserList());\r\n    this.props.dispatch(getKomoditasList());\r\n    this.props.dispatch(getUsersList());\r\n   \r\n  }\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{input}\" className=\"col-form-label text-capitalize\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Petani\" ? (\r\n          <Input\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            onChange={(e) => {\r\n              e.preventDefault();\r\n              this.setState({\r\n                id_petani: e.target.value,\r\n              });\r\n              this.props.dispatch(getFilterLahan(e.target.value));\r\n            }}\r\n          >\r\n            <option value={0}></option>\r\n            {this.props.user.petani &&\r\n              this.props.user.petani.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Lahan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n            >\r\n              <option value={0}></option>\r\n              {this.props.lahan.filter &&\r\n                this.props.lahan.filter.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.alamat}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Tipe User\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.tipeUser &&\r\n              this.props.master.tipeUser.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Varietas\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.komoditas &&\r\n              this.props.master.komoditas.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Satuan\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              <option value={101}>Kg</option>\r\n            </Input>\r\n          </>\r\n        ) : (\r\n          <Input {...input} type={type} placeholder={placeholder}></Input>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n            (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"kategori\"\r\n                component={this.renderField}\r\n                label=\"Tipe User\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"varietas\"\r\n                component={this.renderField}\r\n                label=\"Varietas\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"total_panen\"\r\n                component={this.renderField}\r\n                label=\"Total Panen\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"satuan\"\r\n                component={this.renderField}\r\n                label=\"Satuan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"usia_tanam\"\r\n                component={this.renderField}\r\n                label=\"Usia Tanam\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_petani\"\r\n                component={this.renderField}\r\n                label=\"Petani\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          {/* <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"id_instansi\"\r\n                component={this.renderField}\r\n                label=\"Instansi\"\r\n              />\r\n            </FormGroup>\r\n          </Col> */}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_lahan\"\r\n                component={this.renderField}\r\n                label=\"Lahan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"date\"\r\n                name=\"tgl_tanam\"\r\n                component={this.renderField}\r\n                label=\"Tanggal Tanam\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"date\"\r\n                name=\"tgl_panen\"\r\n                component={this.renderField}\r\n                label=\"Tanggal Panen\"\r\n              />\r\n            </FormGroup>\r\n          </Col>{\" \"}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"keterangan\"\r\n                component={this.renderField}\r\n                label=\"Keterangan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"info\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponentPanen = reduxForm({\r\n  form: \"CreatePanen\",\r\n  validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponentPanen);\r\nexport default connect(mapStateToProps, null)(FormComponentPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentLahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPanen.js",["292"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPanenDetail: state.panen.getPanenDetail,\r\n    errorPanenDetail: state.panen.errorPanenDetail,\r\n  };\r\n};\r\nconst DetailPanen = (props) => {\r\n  console.log(props.getPanenDetail);\r\n  return (\r\n    <>\r\n      {props.getPanenDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              {\" \"}\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Panen</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPanenDetail.petani}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Tanggal Tana</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.tgl_tanam}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Tanggal Panen</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {\" \"}\r\n                    {props.getPanenDetail.tgl_panen}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Total Panen</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.total_panen}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPanenDetail.satuan}</h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Varietas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.varietas}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kategori</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.kategori}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Lahan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_lahan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_petani}\r\n                  </h6>\r\n                </div>{\" \"}\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Instansi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_instansi}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/EditPanen/\" + props.getPanenDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Panen\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailUser.js",["293","294"],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailLahan.js",["295","296","297"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport Photo from \"../../assets/user.png\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLahanDetail: state.lahan.getLahanDetail,\r\n    errorLahanDetail: state.lahan.errorLahanDetail,\r\n  };\r\n};\r\nconst DetailLahan = (props) => {\r\n  console.log(props.getLahanDetail);\r\n  return (\r\n    <>\r\n      {props.getLahanDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Lahan</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.petani}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kategori</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.kategori}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Luas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.luas}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getLahanDetail.satuan}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.id_petani}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.poktan}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-6\">\r\n                  <h6 className=\"text-black-50\">Alamat</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.alamat}</h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pb-3\">\r\n                  <div className=\"p-3\">\r\n                    <h4 className=\"text-secondary mt-4 mb-4\">Detail Alamat</h4>\r\n                    <div className=\"row  justify-content-around\">\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Provinsi</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.provinsi}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kabupaten</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kabupaten}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom mt-3 mt-md-0 col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kecamatan</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kecamatan}\r\n                        </h6>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mt-5  justify-content-around\">\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kelurahan</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.desa}\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\" border-bottom col-md-1 col-5\">\r\n                        <h6 className=\"text-black-50 \">RT</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {\" \"}\r\n                          {props.getLahanDetail.rt}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-1 col-5\">\r\n                        <h6 className=\"text-black-50 mt-3 mt-md-0 \">RW</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {\" \"}\r\n                          {props.getLahanDetail.rw}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-1 col-5 mt-3 mt-md-0\">\r\n                        <h6 className=\"text-black-50  \">Kodepos</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kodepos}\r\n                        </h6>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/EditLahan/\" + props.getLahanDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Lahan\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailLahan);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPupuk.js",["298","299"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukDetail: state.pupuk.getPupukDetail,\r\n    errorPupukDetail: state.pupuk.errorPupukDetail,\r\n  };\r\n};\r\nconst DetailPupuk = (props) => {\r\n  console.log(props.getPupukDetail);\r\n  return (\r\n    <>\r\n      {props.getPupukDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              {\" \"}\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Pupuk</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Jenis Pupuk</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.jenis_pupuk}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPupukDetail.petani}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Kapasitas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.kapasitas}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getPupukDetail.satuan}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">ID Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.id_poktan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.id_petani}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Instansi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.instansi}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Tanggal Distribusi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.tgl_distribusi}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPupukDetail.poktan}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/EditPupuk/\" + props.getPupukDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Pupuk\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailPupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentUser.js",["300","301","302","303","304","305","306"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport UserValidation from \"../../Validations/UserValidation\";\r\nimport Photo from \"../../assets/user.png\";\r\nimport {\r\n  getProvinsiList,\r\n  getKabupatenList,\r\n  getKecamatanList,\r\n  getKelurahanList,\r\n  getGenderList,\r\n  getAgamaList,\r\n  getPendidikanList,\r\n  getGolonganDarahList,\r\n  getSukuList,\r\n  getPekerjaanList,\r\n  getTipeUserList,\r\n  getSatuanList,\r\n} from \"../../actions/masterAction\";\r\nimport { putUsersUpdateImage } from \"../../actions/userAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.users.getUsersDetail.id,\r\n      nama: state.users.getUsersDetail.nama,\r\n      nik: state.users.getUsersDetail.nik,\r\n      kk: state.users.getUsersDetail.kk,\r\n      kategori: state.users.getUsersDetail.kategori,\r\n      pekerjaan: state.users.getUsersDetail.pekerjaan,\r\n      gender: state.users.getUsersDetail.gender,\r\n      agama: state.users.getUsersDetail.agama,\r\n      suku: state.users.getUsersDetail.suku,\r\n      tgl_lahir: state.users.getUsersDetail.tgl_lahir,\r\n      pendidikan: state.users.getUsersDetail.pendidikan,\r\n      alamat: state.users.getUsersDetail.alamat,\r\n      rt: state.users.getUsersDetail.rt,\r\n      rw: state.users.getUsersDetail.rw,\r\n      id_desa: state.users.getUsersDetail.id_desa,\r\n      id_kecamatan: state.users.getUsersDetail.id_kecamatan,\r\n      id_kabupaten: state.users.getUsersDetail.id_kabupaten,\r\n      id_provinsi: state.users.getUsersDetail.id_provinsi,\r\n      kodepos: state.users.getUsersDetail.kodepos,\r\n      foto_profil: state.users.getUsersDetail.foto_profil,\r\n      foto_kk: state.users.getUsersDetail.foto_kk,\r\n      foto_ktp: state.users.getUsersDetail.foto_ktp,\r\n      gol_darah: state.users.getUsersDetail.gol_darah,\r\n      telp: state.users.getUsersDetail.telp,\r\n      email: state.users.getUsersDetail.email,\r\n      facebook: state.users.getUsersDetail.facebook,\r\n      id_user: state.users.getUsersDetail.id_user,\r\n    },\r\n    master: {\r\n      provinsi: state.master.getProvinsiList,\r\n      kabupaten: state.master.getKabupatenList,\r\n      kecamatan: state.master.getKecamatanList,\r\n      kelurahan: state.master.getKelurahanList,\r\n      gender: state.master.getGenderList,\r\n      agama: state.master.getAgamaList,\r\n      pendidikan: state.master.getPendidikanList,\r\n      golonganDarah: state.master.getGolonganDarahList,\r\n      suku: state.master.getSukuList,\r\n      pekerjaan: state.master.getPekerjaanList,\r\n      tipeUser: state.master.getTipeUserList,\r\n\r\n      satuan: state.master.getSatuanList,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormComponentUser extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getProvinsiList());\r\n    this.props.dispatch(getGenderList());\r\n    this.props.dispatch(getAgamaList());\r\n    this.props.dispatch(getPendidikanList());\r\n    this.props.dispatch(getGolonganDarahList());\r\n    this.props.dispatch(getSukuList());\r\n    this.props.dispatch(getPekerjaanList());\r\n    this.props.dispatch(getTipeUserList());\r\n\r\n    this.props.dispatch(getSatuanList());\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id_provinsi: 0,\r\n      id_kabupaten: 0,\r\n      id_kecamatan: 0,\r\n      id_kelurahan: 0,\r\n      file: null,\r\n      base64URL: \"\",\r\n    };\r\n  }\r\n  getBase64 = (file) => {\r\n    return new Promise((resolve) => {\r\n      let fileInfo;\r\n      let baseURL = \"\";\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        // Make a fileInfo Object\r\n        // console.log(\"Called\", reader);\r\n        baseURL = reader.result;\r\n        // console.log(baseURL);\r\n        resolve(baseURL);\r\n      };\r\n      // console.log(fileInfo);\r\n    });\r\n  };\r\n\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{label}\" className=\"col-form-label text-secondary\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Gender\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n\r\n              {this.props.master.gender &&\r\n                this.props.master.gender.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Agama\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.agama &&\r\n              this.props.master.agama.map((item, i) => {\r\n                return (\r\n                  <>\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  </>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Pendidikan\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n\r\n            {this.props.master.pendidikan &&\r\n              this.props.master.pendidikan.map((item, i) => {\r\n                return (\r\n                  <>\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  </>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Suku\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n\r\n              {this.props.master.suku &&\r\n                this.props.master.suku.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Pekerjaan\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.pekerjaan &&\r\n                this.props.master.pekerjaan.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Golongan Darah\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.golonganDarah &&\r\n                this.props.master.golonganDarah.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Tipe User\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.tipeUser &&\r\n                this.props.master.tipeUser.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Provinsi\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_provinsi: e.target.selectedOptions[0].id,\r\n                  id_kabupaten: 0,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n\r\n                this.props.dispatch(\r\n                  getKabupatenList(e.target.selectedOptions[0].id)\r\n                );\r\n                {\r\n                  console.log(\"id provinsi : \", e.target.selectedOptions[0].id);\r\n                }\r\n              }}\r\n            >\r\n              <option value={0}>Provinsi</option>\r\n              {this.props.master.provinsi &&\r\n                this.props.master.provinsi.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.provinsi}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kabupaten\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kabupaten: e.target.selectedOptions[0].id,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKecamatanList(\r\n                    this.state.id_provinsi,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n                console.log(\"id kabupaten : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kabupaten / Kota</option>\r\n              {this.props.master.kabupaten &&\r\n                this.props.master.kabupaten.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option\r\n                        key={i.id}\r\n                        value={item.id}\r\n                        id={item.kabupatenkota}\r\n                      >\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kecamatan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kecamatan: e.target.selectedOptions[0].id,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKelurahanList(\r\n                    this.state.id_provinsi,\r\n                    this.state.id_kabupaten,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n\r\n                console.log(\"id kecamatan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kecamatan</option>\r\n              {this.props.master.kecamatan &&\r\n                this.props.master.kecamatan.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.kecamatan}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kelurahan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kelurahan: e.target.selectedOptions[0].id,\r\n                });\r\n                console.log(\"Id kelurahan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kelurahan</option>\r\n              {this.props.master.kelurahan &&\r\n                this.props.master.kelurahan.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.kelurahan}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : (\r\n          // ) : label === \"Foto KTP\" ? (\r\n          //   <>\r\n          //     <Input\r\n          //       {...input}\r\n          //       type={type}\r\n          //       value={value}\r\n          //       placeholder={placeholder}\r\n          //       onChange={(e) => {\r\n          //         e.preventDefault();\r\n\r\n          //         let { file } = this.state;\r\n\r\n          //         file = e.target.files[0];\r\n\r\n          //         this.getBase64(file)\r\n          //           .then((result) => {\r\n          //             file[\"base64\"] = result;\r\n          //             console.log(\"File Is\", file.base64);\r\n          //             this.value = file.base64;\r\n          //             console.log(this.props.initialValues.id);\r\n          //             this.props.dispatch(\r\n          //               putUsersUpdateImage({\r\n          //                 id: this.props.initialValues.id,\r\n          //                 foto_ktp: this.value,\r\n          //               })\r\n          //             );\r\n          //             console.log(this.value);\r\n          //             this.setState({\r\n          //               base64URL: result,\r\n          //               file,\r\n          //             });\r\n          //           })\r\n          //           .catch((err) => {\r\n          //             console.log(err);\r\n          //           });\r\n          //       }}\r\n          //     ></Input>\r\n          //   </>\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              autoComplete=\"off\"\r\n            ></Input>\r\n          </>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <small style={{ color: \"red\" }}>{error}</small>) ||\r\n            (warning && <span style={{ color: \"brown\" }}>{warning}</span>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.props.handleSubmit}>\r\n          <h4 className=\"text-black-50 mt-4\">Identitas</h4>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"nama\"\r\n                  component={this.renderField}\r\n                  label=\"Nama\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  component={this.renderField}\r\n                  label=\"Email\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"telp\"\r\n                  component={this.renderField}\r\n                  label=\"Nomor Telepon\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"nik\"\r\n                  component={this.renderField}\r\n                  label=\"NIK\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"kk\"\r\n                  component={this.renderField}\r\n                  label=\"Kartu Keluarga\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"kategori\"\r\n                  component={this.renderField}\r\n                  label=\"Tipe User\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"pekerjaan\"\r\n                  component={this.renderField}\r\n                  label=\"Pekerjaan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  label=\"Gender\"\r\n                  name=\"gender\"\r\n                  type=\"select\"\r\n                  component={this.renderField}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  name=\"agama\"\r\n                  type=\"select\"\r\n                  component={this.renderField}\r\n                  label=\"Agama\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"suku\"\r\n                  component={this.renderField}\r\n                  label=\"Suku\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"date\"\r\n                  name=\"tgl_lahir\"\r\n                  component={this.renderField}\r\n                  label=\"Tanggal Lahir\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"pendidikan\"\r\n                  component={this.renderField}\r\n                  label=\"Pendidikan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"gol_darah\"\r\n                  component={this.renderField}\r\n                  label=\"Golongan Darah\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"facebook\"\r\n                  component={this.renderField}\r\n                  label=\"Facebook\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n          <h4 className=\"text-black-50 mt-4\">Lokasi</h4>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"alamat\"\r\n                  component={this.renderField}\r\n                  label=\"Alamat\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"rt\"\r\n                  component={this.renderField}\r\n                  label=\"RT\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"rw\"\r\n                  component={this.renderField}\r\n                  label=\"RW\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_provinsi\"\r\n                  component={this.renderField}\r\n                  label=\"Provinsi\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_kabupaten\"\r\n                  component={this.renderField}\r\n                  label=\"Kabupaten\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_kecamatan\"\r\n                  component={this.renderField}\r\n                  label=\"Kecamatan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_desa\"\r\n                  component={this.renderField}\r\n                  label=\"Kelurahan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"kodepos\"\r\n                  component={this.renderField}\r\n                  label=\"KodePos\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col md=\"12\">\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"info\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Simpan\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponentUser = reduxForm({\r\n  form: \"CreateUser\",\r\n  // validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponentUser);\r\nexport default connect(mapStateToProps, null)(FormComponentUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPanen.js",["307","308","309","310"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus } from \"react-feather\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deletePanen } from \"../../actions/panenAction\";\r\n\r\nconst handleClick = (dispatch, id, varietas) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan Panen dengan nama  : \" + varietas,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deletePanen(id));\r\n      swal({\r\n        title: \"Berhasil Delete Panen!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n//buat sorted\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\n\r\n//buat search\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPanenList: state.panen.getPanenList,\r\n    errorPanenList: state.panen.errorPanenList,\r\n  };\r\n};\r\n\r\nconst TableComponentPanen = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getPanenList.length,\r\n      },\r\n    ],\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"petani\",\r\n      text: \"Petani\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"alamat\",\r\n      text: \"Lokasi\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.alamat}</small>\r\n            <small>{row.luas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"kategori\",\r\n      text: \"Kategori\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.kategori}</small>\r\n            <small>{row.varietas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"totalpanen\",\r\n      text: \"Panen\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.total_panen}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tgl_tanam\",\r\n      text: \"Tanam / Panen\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.tgl_tanam} / </small> <small>{row.tgl_panen}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Action\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-panen/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle\r\n                className=\"ml-1\"\r\n                color=\"transparent\"\r\n                size=\"sm\"\r\n                outline\r\n              >\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-panen/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() =>\r\n                    handleClick(props.dispatch, row.id, row.varietas)\r\n                  }\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {props.getPanenList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getPanenList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-panen\">\r\n                <button type=\"button\" className=\"btn btn-light rounded\">\r\n                  <span >\r\n                    Tambah Panen <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorPanenList ? (\r\n            <h2>{props.errorPanenList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Calender\\EventCalender.js",["311"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Calendar } from \"react-feather\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\n\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport { getPupukList } from \"../../actions/pupukAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukList: state.pupuk.getPupukList,\r\n    errorPupukList: state.pupuk.errorPupukList,\r\n  };\r\n};\r\n\r\nclass EventCalender extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getPupukList());\r\n  }\r\n\r\n  getData() {\r\n    const arr = [];\r\n\r\n    let i = 0;\r\n    for (i = 0; i < this.props.getPupukList.length; i++) {\r\n      arr.push({\r\n        // title: this.props.getPupukList[i].jenis_pupuk,\r\n        date: this.props.getPupukList[i].tgl_distribusi,\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    const data = this.getData();\r\n\r\n    console.log(data);\r\n    return (\r\n      <>\r\n        <div>\r\n          {data.length ? (\r\n            <>\r\n              <FullCalendar\r\n                plugins={[dayGridPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={data}\r\n              />\r\n              <div\r\n                className=\"scroll_calender border-top  border-secondary overflow-auto   mt-3 py-3\"\r\n                style={{ height: \"325px\" }}\r\n              >\r\n                <ul>\r\n                  {this.props.getPupukList.map((items) => {\r\n                    return (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"text-secondary align-baseline\">\r\n                            <Calendar className=\"mb-1 mr-2\" size={18} />\r\n                            <small>{items.tgl_distribusi}</small>\r\n                          </span>\r\n                          <h6>\r\n                            {items.jenis_pupuk} dikirimkan ke {items.petani}\r\n                          </h6>\r\n                        </li>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div></div>\r\n            </>\r\n          ) : (\r\n            <div className=\" d-flex justify-content-center \">\r\n              <div className=\"spinner-border text-info \" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EventCalender);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\UserValidation.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormPict.js",["312","313"],"import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { putUsersUpdateImage, delleteDataPict } from \"../../actions/userAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.users.getUsersDetail.id,\r\n      foto_profil: state.users.getUsersDetail.foto_profil,\r\n      foto_kk: state.users.getUsersDetail.foto_kk,\r\n      foto_ktp: state.users.getUsersDetail.foto_ktp,\r\n    },\r\n    image: {\r\n      getResponseDataPict: state.users.getResponseDataPict,\r\n      errorResponseDataPict: state.users.errorResponseDataPict,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormPict extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      base64URL: \"\",\r\n    };\r\n  }\r\n  getBase64 = (file) => {\r\n    return new Promise((resolve) => {\r\n      let fileInfo;\r\n      let baseURL = \"\";\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        // Make a fileInfo Object\r\n        // console.log(\"Called\", reader);\r\n        baseURL = reader.result;\r\n        // console.log(baseURL);\r\n        resolve(baseURL);\r\n      };\r\n      // console.log(fileInfo);\r\n    });\r\n  };\r\n\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{label}\" className=\"col-form-label text-secondary\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Foto KTP\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_ktp: this.value,\r\n                      })\r\n                    );\r\n\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : label === \"Foto Profil\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_profil: this.value,\r\n                      })\r\n                    );\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : label === \"Foto KK\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_kk: this.value,\r\n                      })\r\n                    );\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <small style={{ color: \"red\" }}>{error}</small>) ||\r\n            (warning && <span style={{ color: \"brown\" }}>{warning}</span>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    console.log(this.props.image);\r\n    if (\r\n      this.props.image.getResponseDataPict ||\r\n      this.props.image.errorResponseDataPict\r\n    ) {\r\n      if (this.props.image.errorResponseDataPict) {\r\n        swal(\"Failed!\", this.props.image.errorResponseDataPict, \"error\");\r\n        this.props.dispatch(delleteDataPict());\r\n      } else {\r\n        this.props.dispatch(delleteDataPict());\r\n        swal({\r\n          title: \"Foto Updated !\",\r\n          icon: \"success\",\r\n          button: \"Oke\",\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.props.handleSubmit}>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_ktp\"\r\n                component={this.renderField}\r\n                label=\"Foto KTP\"\r\n              />\r\n            </Col>{\" \"}\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_profil\"\r\n                component={this.renderField}\r\n                label=\"Foto Profil\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_kk\"\r\n                component={this.renderField}\r\n                label=\"Foto KK\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormPict = reduxForm({\r\n  form: \"UpdateImage\",\r\n  // validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormPict);\r\nexport default connect(mapStateToProps, null)(FormPict);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\admin.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\adminAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Admin\\Admin.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormAdmin.js",["314","315","316","317"],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":26},{"ruleId":"322","severity":1,"message":"326","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":15},{"ruleId":"322","severity":1,"message":"327","line":6,"column":3,"nodeType":"324","messageId":"325","endLine":6,"endColumn":16},{"ruleId":"322","severity":1,"message":"328","line":7,"column":3,"nodeType":"324","messageId":"325","endLine":7,"endColumn":11},{"ruleId":"322","severity":1,"message":"329","line":18,"column":9,"nodeType":"324","messageId":"325","endLine":18,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":11,"column":9,"nodeType":"332","endLine":11,"endColumn":59},{"ruleId":"322","severity":1,"message":"333","line":6,"column":3,"nodeType":"324","messageId":"325","endLine":6,"endColumn":17},{"ruleId":"322","severity":1,"message":"334","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":16},{"ruleId":"322","severity":1,"message":"335","line":3,"column":18,"nodeType":"324","messageId":"325","endLine":3,"endColumn":22},{"ruleId":"322","severity":1,"message":"336","line":3,"column":24,"nodeType":"324","messageId":"325","endLine":3,"endColumn":29},{"ruleId":"322","severity":1,"message":"337","line":3,"column":31,"nodeType":"324","messageId":"325","endLine":3,"endColumn":40},{"ruleId":"322","severity":1,"message":"338","line":3,"column":42,"nodeType":"324","messageId":"325","endLine":3,"endColumn":51},{"ruleId":"322","severity":1,"message":"339","line":5,"column":26,"nodeType":"324","messageId":"325","endLine":5,"endColumn":33},{"ruleId":"322","severity":1,"message":"340","line":11,"column":9,"nodeType":"324","messageId":"325","endLine":11,"endColumn":16},{"ruleId":"322","severity":1,"message":"338","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":19},{"ruleId":"322","severity":1,"message":"338","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":19},{"ruleId":"322","severity":1,"message":"339","line":11,"column":10,"nodeType":"324","messageId":"325","endLine":11,"endColumn":17},{"ruleId":"330","severity":1,"message":"331","line":36,"column":21,"nodeType":"332","endLine":36,"endColumn":48},{"ruleId":"330","severity":1,"message":"331","line":55,"column":21,"nodeType":"332","endLine":55,"endColumn":49},{"ruleId":"330","severity":1,"message":"331","line":74,"column":21,"nodeType":"332","endLine":74,"endColumn":52},{"ruleId":"330","severity":1,"message":"331","line":93,"column":21,"nodeType":"332","endLine":93,"endColumn":62},{"ruleId":"330","severity":1,"message":"331","line":113,"column":21,"nodeType":"332","endLine":113,"endColumn":51},{"ruleId":"330","severity":1,"message":"331","line":132,"column":21,"nodeType":"332","endLine":132,"endColumn":51},{"ruleId":"322","severity":1,"message":"338","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":19},{"ruleId":"322","severity":1,"message":"341","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":98,"column":17,"nodeType":"344","messageId":"345","endLine":101,"endColumn":18},{"ruleId":"322","severity":1,"message":"334","line":4,"column":3,"nodeType":"324","messageId":"325","endLine":4,"endColumn":9},{"ruleId":"322","severity":1,"message":"346","line":6,"column":3,"nodeType":"324","messageId":"325","endLine":6,"endColumn":8},{"ruleId":"322","severity":1,"message":"347","line":7,"column":3,"nodeType":"324","messageId":"325","endLine":7,"endColumn":8},{"ruleId":"322","severity":1,"message":"334","line":4,"column":3,"nodeType":"324","messageId":"325","endLine":4,"endColumn":9},{"ruleId":"322","severity":1,"message":"346","line":6,"column":3,"nodeType":"324","messageId":"325","endLine":6,"endColumn":8},{"ruleId":"322","severity":1,"message":"347","line":7,"column":3,"nodeType":"324","messageId":"325","endLine":7,"endColumn":8},{"ruleId":"322","severity":1,"message":"348","line":18,"column":22,"nodeType":"324","messageId":"325","endLine":18,"endColumn":34},{"ruleId":"322","severity":1,"message":"349","line":19,"column":52,"nodeType":"324","messageId":"325","endLine":19,"endColumn":56},{"ruleId":"322","severity":1,"message":"350","line":21,"column":8,"nodeType":"324","messageId":"325","endLine":21,"endColumn":14},{"ruleId":"330","severity":1,"message":"331","line":109,"column":21,"nodeType":"332","endLine":112,"endColumn":22},{"ruleId":"330","severity":1,"message":"331","line":115,"column":19,"nodeType":"332","endLine":119,"endColumn":20},{"ruleId":"351","severity":1,"message":"352","line":24,"column":7,"nodeType":"353","messageId":"354","endLine":24,"endColumn":16},{"ruleId":"322","severity":1,"message":"355","line":4,"column":21,"nodeType":"324","messageId":"325","endLine":4,"endColumn":28},{"ruleId":"322","severity":1,"message":"355","line":4,"column":21,"nodeType":"324","messageId":"325","endLine":4,"endColumn":28},{"ruleId":"322","severity":1,"message":"356","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":13},{"ruleId":"322","severity":1,"message":"346","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":15},{"ruleId":"322","severity":1,"message":"355","line":5,"column":21,"nodeType":"324","messageId":"325","endLine":5,"endColumn":28},{"ruleId":"322","severity":1,"message":"356","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},{"ruleId":"322","severity":1,"message":"346","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":15},{"ruleId":"322","severity":1,"message":"355","line":4,"column":21,"nodeType":"324","messageId":"325","endLine":4,"endColumn":28},{"ruleId":"322","severity":1,"message":"357","line":1,"column":28,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"322","severity":1,"message":"358","line":1,"column":38,"nodeType":"324","messageId":"325","endLine":1,"endColumn":47},{"ruleId":"322","severity":1,"message":"341","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":22},{"ruleId":"322","severity":1,"message":"356","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},{"ruleId":"322","severity":1,"message":"359","line":21,"column":10,"nodeType":"324","messageId":"325","endLine":21,"endColumn":29},{"ruleId":"322","severity":1,"message":"360","line":98,"column":11,"nodeType":"324","messageId":"325","endLine":98,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":263,"column":17,"nodeType":"344","messageId":"345","endLine":265,"endColumn":18},{"ruleId":"322","severity":1,"message":"338","line":4,"column":3,"nodeType":"324","messageId":"325","endLine":4,"endColumn":12},{"ruleId":"322","severity":1,"message":"334","line":5,"column":3,"nodeType":"324","messageId":"325","endLine":5,"endColumn":9},{"ruleId":"322","severity":1,"message":"346","line":7,"column":3,"nodeType":"324","messageId":"325","endLine":7,"endColumn":8},{"ruleId":"322","severity":1,"message":"347","line":8,"column":3,"nodeType":"324","messageId":"325","endLine":8,"endColumn":8},{"ruleId":"361","severity":1,"message":"362","line":17,"column":3,"nodeType":"363","messageId":"364","endLine":19,"endColumn":4},{"ruleId":"322","severity":1,"message":"334","line":2,"column":51,"nodeType":"324","messageId":"325","endLine":2,"endColumn":57},{"ruleId":"322","severity":1,"message":"360","line":33,"column":11,"nodeType":"324","messageId":"325","endLine":33,"endColumn":19},{"ruleId":"322","severity":1,"message":"357","line":1,"column":28,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"322","severity":1,"message":"358","line":1,"column":38,"nodeType":"324","messageId":"325","endLine":1,"endColumn":47},{"ruleId":"322","severity":1,"message":"341","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":22},{"ruleId":"322","severity":1,"message":"356","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":13},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'toggleTopbar' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'deleteDataUser' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Container' is defined but never used.","'getData' is defined but never used.","'history' is assigned a value but never used.","'UserValidation' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Table' is defined but never used.","'Badge' is defined but never used.","'getUsersList' is defined but never used.","'User' is defined but never used.","'Kirito' is defined but never used.","no-dupe-keys","Duplicate key 'tgl_panen'.","ObjectExpression","unexpected","'Spinner' is defined but never used.","'Photo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'putUsersUpdateImage' is defined but never used.","'fileInfo' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]