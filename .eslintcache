[{"F:\\Kodingan\\React\\Tanipedia\\src\\index.js":"1","F:\\Kodingan\\React\\Tanipedia\\src\\App.js":"2","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\index.js":"3","F:\\Kodingan\\React\\Tanipedia\\src\\routes\\Routes.js":"4","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Sidebar.js":"5","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\pupuk.js":"6","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\panen.js":"7","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\lahan.js":"8","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\users.js":"9","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\master.js":"10","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Topbar.js":"11","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PublicRoute.js":"12","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PrivateRoute.js":"13","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\NotFound.js":"14","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\Common.js":"15","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\Home.js":"16","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\EditUser.js":"17","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\DetailUserContainer.js":"18","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\Pupuk.js":"19","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\AuthPages\\Login.js":"20","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\CreateLahan.js":"21","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\DetailPupukContainer.js":"22","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\DetailPanenContainer.js":"23","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\DetailLahanContainer.js":"24","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\Lahan.js":"25","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\EditPupuk.js":"26","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\Panen.js":"27","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\CreatePanen.js":"28","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Dashboard\\Dashboard.js":"29","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\CreatePupuk.js":"30","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\EditPanen.js":"31","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\CreateUser.js":"32","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\EditLahan.js":"33","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\pupukAction.js":"34","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\userAction.js":"35","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\lahanAction.js":"36","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\masterAction.js":"37","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\panenAction.js":"38","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Logout.js":"39","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPupuk.js":"40","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentLahan.js":"41","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPupuk.js":"42","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentUser.js":"43","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPanen.js":"44","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentLahan.js":"45","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPanen.js":"46","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailUser.js":"47","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailLahan.js":"48","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPupuk.js":"49","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentUser.js":"50","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPanen.js":"51","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Calender\\EventCalender.js":"52","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\UserValidation.js":"53","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormPict.js":"54","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\admin.js":"55","F:\\Kodingan\\React\\Tanipedia\\src\\actions\\adminAction.js":"56","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Admin\\Admin.js":"57","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormAdmin.js":"58","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\AdminValidation.js":"59"},{"size":966,"mtime":1614141301739,"results":"60","hashOfConfig":"61"},{"size":719,"mtime":1614144487443,"results":"62","hashOfConfig":"61"},{"size":401,"mtime":1615657354279,"results":"63","hashOfConfig":"61"},{"size":3783,"mtime":1615745361479,"results":"64","hashOfConfig":"61"},{"size":2762,"mtime":1615717553493,"results":"65","hashOfConfig":"61"},{"size":1211,"mtime":1613579140201,"results":"66","hashOfConfig":"61"},{"size":1211,"mtime":1613621278796,"results":"67","hashOfConfig":"61"},{"size":1461,"mtime":1615094206288,"results":"68","hashOfConfig":"61"},{"size":1720,"mtime":1615831797040,"results":"69","hashOfConfig":"61"},{"size":3821,"mtime":1614932864150,"results":"70","hashOfConfig":"61"},{"size":1693,"mtime":1614176660223,"results":"71","hashOfConfig":"61"},{"size":471,"mtime":1613139683168,"results":"72","hashOfConfig":"61"},{"size":531,"mtime":1613136265604,"results":"73","hashOfConfig":"61"},{"size":656,"mtime":1614659832715,"results":"74","hashOfConfig":"61"},{"size":1505,"mtime":1615660960844,"results":"75","hashOfConfig":"61"},{"size":529,"mtime":1614266042526,"results":"76","hashOfConfig":"61"},{"size":1821,"mtime":1615746300937,"results":"77","hashOfConfig":"61"},{"size":506,"mtime":1614770624459,"results":"78","hashOfConfig":"61"},{"size":537,"mtime":1614065857257,"results":"79","hashOfConfig":"61"},{"size":8035,"mtime":1615660971867,"results":"80","hashOfConfig":"61"},{"size":1125,"mtime":1614665933489,"results":"81","hashOfConfig":"61"},{"size":510,"mtime":1614779578667,"results":"82","hashOfConfig":"61"},{"size":514,"mtime":1615746810753,"results":"83","hashOfConfig":"61"},{"size":512,"mtime":1614780577053,"results":"84","hashOfConfig":"61"},{"size":529,"mtime":1614066000805,"results":"85","hashOfConfig":"61"},{"size":1733,"mtime":1615745177858,"results":"86","hashOfConfig":"61"},{"size":537,"mtime":1614066425251,"results":"87","hashOfConfig":"61"},{"size":1143,"mtime":1614244574021,"results":"88","hashOfConfig":"61"},{"size":6061,"mtime":1615660968564,"results":"89","hashOfConfig":"61"},{"size":1123,"mtime":1614936908198,"results":"90","hashOfConfig":"61"},{"size":1781,"mtime":1615745323872,"results":"91","hashOfConfig":"61"},{"size":1198,"mtime":1615707320646,"results":"92","hashOfConfig":"61"},{"size":1781,"mtime":1615745490555,"results":"93","hashOfConfig":"61"},{"size":3897,"mtime":1614234245185,"results":"94","hashOfConfig":"61"},{"size":5943,"mtime":1615831731644,"results":"95","hashOfConfig":"61"},{"size":4559,"mtime":1615094135915,"results":"96","hashOfConfig":"61"},{"size":10283,"mtime":1614935109009,"results":"97","hashOfConfig":"61"},{"size":3897,"mtime":1613621081837,"results":"98","hashOfConfig":"61"},{"size":1063,"mtime":1614043073293,"results":"99","hashOfConfig":"61"},{"size":5062,"mtime":1615744494746,"results":"100","hashOfConfig":"61"},{"size":14541,"mtime":1615834480612,"results":"101","hashOfConfig":"61"},{"size":6790,"mtime":1615743862141,"results":"102","hashOfConfig":"61"},{"size":7997,"mtime":1615719569857,"results":"103","hashOfConfig":"61"},{"size":8727,"mtime":1615746780754,"results":"104","hashOfConfig":"61"},{"size":7117,"mtime":1615745948114,"results":"105","hashOfConfig":"61"},{"size":5139,"mtime":1615746670169,"results":"106","hashOfConfig":"61"},{"size":8645,"mtime":1615647115708,"results":"107","hashOfConfig":"61"},{"size":7398,"mtime":1615746560374,"results":"108","hashOfConfig":"61"},{"size":4808,"mtime":1615744772057,"results":"109","hashOfConfig":"61"},{"size":20321,"mtime":1615706649043,"results":"110","hashOfConfig":"61"},{"size":7333,"mtime":1615743820671,"results":"111","hashOfConfig":"61"},{"size":2534,"mtime":1614926539144,"results":"112","hashOfConfig":"61"},{"size":1360,"mtime":1615706909223,"results":"113","hashOfConfig":"61"},{"size":7392,"mtime":1615543848430,"results":"114","hashOfConfig":"61"},{"size":471,"mtime":1615657985261,"results":"115","hashOfConfig":"61"},{"size":767,"mtime":1615658033356,"results":"116","hashOfConfig":"61"},{"size":1432,"mtime":1615708044802,"results":"117","hashOfConfig":"61"},{"size":3368,"mtime":1615707717708,"results":"118","hashOfConfig":"61"},{"size":524,"mtime":1615706355190,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"13lmiis",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"F:\\Kodingan\\React\\Tanipedia\\src\\index.js",[],["261","262"],"F:\\Kodingan\\React\\Tanipedia\\src\\App.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\index.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\routes\\Routes.js",["263","264"],"import React, { Component } from \"react\";\r\nimport Login from \"../pages/AuthPages/Login\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n//component\r\nimport SideBar from \"../component/Sidebar//Sidebar\";\r\nimport Topbar from \"../component/Sidebar/Topbar\";\r\nimport { Container } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\n\r\n//utls\r\nimport PrivateRoute from \"../Utils/PrivateRoute\";\r\nimport PublicRoute from \"../Utils/PublicRoute\";\r\nimport { getToken } from \"../Utils/Common\";\r\n//Home\r\nimport Home from \"../pages/PrivatePages/Home/Home\";\r\nimport CreateUser from \"../pages/PrivatePages/Home/CreateUser\";\r\nimport EditUser from \"../pages/PrivatePages/Home/EditUser\";\r\nimport DetailUserContainer from \"../pages/PrivatePages/Home/DetailUserContainer\";\r\n//Pupuk\r\nimport Pupuk from \"../pages/PrivatePages/Pupuk/Pupuk\";\r\nimport DetailPupukContainer from \"../pages/PrivatePages/Pupuk/DetailPupukContainer\";\r\nimport CreatePupuk from \"../pages/PrivatePages/Pupuk/CreatePupuk\";\r\nimport EditPupuk from \"../pages/PrivatePages/Pupuk/EditPupuk\";\r\n//Lahan\r\nimport Lahan from \"../pages/PrivatePages/Lahan/Lahan\";\r\nimport DetailLahanContainer from \"../pages/PrivatePages/Lahan/DetailLahanContainer\";\r\nimport CreateLahan from \"../pages/PrivatePages/Lahan/CreateLahan\";\r\nimport EditLahan from \"../pages/PrivatePages/Lahan/EditLahan\";\r\n//Panen\r\nimport Panen from \"../pages/PrivatePages/Panen/Panen\";\r\nimport DetailPanenContainer from \"../pages/PrivatePages/Panen/DetailPanenContainer\";\r\nimport CreatePanen from \"../pages/PrivatePages/Panen/CreatePanen\";\r\nimport EditPanen from \"../pages/PrivatePages/Panen/EditPanen\";\r\nimport Dashboard from \"../pages/PrivatePages/Dashboard/Dashboard\";\r\n//Admin\r\nimport Admin from \"../pages/PrivatePages/Admin/Admin\";\r\n//not found\r\nimport NotFound from \"../pages/NotFound\";\r\n\r\nconst Routes = ({ sidebarIsOpen, toggleSidebar }) => {\r\n  const token = getToken();\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      className={classNames(\"content overflow-auto\", {\r\n        \"is-open\": sidebarIsOpen,\r\n      })}\r\n    >\r\n      <div className={token ? \"sticky-top\" : \"d-none\"}>\r\n        <Topbar toggleSidebar={toggleSidebar} />\r\n      </div>\r\n\r\n      <Switch>\r\n        <PublicRoute exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n        <PrivateRoute path=\"/home\" component={Home} />\r\n        <PrivateRoute path=\"/pupuk\" component={Pupuk} />\r\n        <PrivateRoute path=\"/lahan\" component={Lahan} />\r\n        <PrivateRoute path=\"/panen\" component={Panen} />{\" \"}\r\n        <PrivateRoute path=\"/admin\" component={Admin} />\r\n        <PrivateRoute path=\"/detail-user/:id\" component={DetailUserContainer} />\r\n        <PrivateRoute\r\n          path=\"/detail-pupuk/:id\"\r\n          component={DetailPupukContainer}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/detail-lahan/:id\"\r\n          component={DetailLahanContainer}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/detail-panen/:id\"\r\n          component={DetailPanenContainer}\r\n        />\r\n        <PrivateRoute path=\"/create-user\" component={CreateUser} />\r\n        <PrivateRoute path=\"/create-pupuk\" component={CreatePupuk} />\r\n        <PrivateRoute path=\"/create-lahan\" component={CreateLahan} />\r\n        <PrivateRoute path=\"/create-panen\" component={CreatePanen} />\r\n        <PrivateRoute path=\"/edit-user/:id\" component={EditUser} />\r\n        <PrivateRoute path=\"/edit-pupuk/:id\" component={EditPupuk} />\r\n        <PrivateRoute path=\"/edit-lahan/:id\" component={EditLahan} />\r\n        <PrivateRoute path=\"/edit-panen/:id\" component={EditPanen} />{\" \"}\r\n        <PrivateRoute path=\"/edit-panen/:id\" component={EditPanen} />{\" \"}\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Sidebar.js",["265"],"import React from \"react\";\r\nimport { User, ShoppingBag, Globe, Activity, Home, Plus } from \"react-feather\";\r\n\r\nimport { NavItem, NavLink, Nav } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getToken } from \"../../Utils/Common\";\r\n\r\nconst token = getToken();\r\n\r\nconst SideBar = ({ isOpen, toggle }) => (\r\n  <div\r\n    className={classNames(\r\n      \"sidebar\",\r\n      { \"is-open\": isOpen },\r\n      token ? \"\" : \"d-none\"\r\n    )}\r\n  >\r\n    <div className=\"sidebar-header\">\r\n      <span color=\"info\" onClick={toggle} style={{ color: \"#fff\" }}>\r\n        &times;\r\n      </span>\r\n      <h3>Tanipedia</h3>\r\n    </div>\r\n    <div className=\"side-menu \">\r\n      <Nav vertical className=\"list-unstyled pb-3 ml-2 mt-3\">\r\n        <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/\"}\r\n           \r\n          >\r\n            <Home className=\"mr-3\" size={24} />\r\n            <span>Dashboard</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/home\"}\r\n           \r\n          >\r\n            <User className=\"mr-3\" size={24} />\r\n            <span>Petani</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/pupuk\"}\r\n           \r\n          >\r\n            <ShoppingBag className=\"mr-3\" size={24} />\r\n            <span> Pupuk</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/lahan\"}\r\n           \r\n          >\r\n            <Globe className=\"mr-3\" size={24} />\r\n            <span> Lahan</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/panen\"}\r\n          >\r\n            <Activity className=\"mr-3\" size={24} />\r\n            <span>Panen</span>\r\n          </NavLink>\r\n        </NavItem>{\" \"}\r\n        {/* <NavItem className=\"rounded-pill mb-2\">\r\n          <NavLink\r\n            className=\"d-flex align-items-center\"\r\n            tag={Link}\r\n            to={\"/admin\"}\r\n          >\r\n            <Plus className=\"mr-3\" size={24} />\r\n            <span>Tambah User</span>\r\n          </NavLink>\r\n        </NavItem> */}\r\n      </Nav>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SideBar;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\pupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\panen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\lahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\users.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\master.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Topbar.js",["266","267","268"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { getName } from \"../../Utils/Common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logout from \"./Logout\";\r\nimport { AlignLeft } from \"react-feather\";\r\nconst Topbar = ({ toggleSidebar }) => {\r\n  const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n  const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n  const name = getName();\r\n\r\n  return (\r\n    <Navbar\r\n      color=\"light\"\r\n      light\r\n      className=\"navbar shadow-lg p-3 mb-5 bg-white rounded  \"\r\n      expand=\"md\"\r\n    >\r\n      <Button\r\n        color=\"info\"\r\n        onClick={toggleSidebar}\r\n        className=\"p-1\"\r\n        // style={{ border: \"2px solid black\" }}\r\n      >\r\n        <AlignLeft size={24} />\r\n      </Button>\r\n      {/* <NavbarToggler onClick={toggleTopbar} /> */}\r\n      {/* <Collapse isOpen={topbarIsOpen} navbar> */}\r\n      <Nav className=\"ml-auto\" navbar>\r\n        <NavItem>\r\n          <NavLink tag={Link} to={\"/page-1\"} className=\"text-capitalize\">\r\n            Selamat Datang {name}\r\n          </NavLink>\r\n        </NavItem>\r\n        {/* <NavItem>\r\n            <NavLink tag={Link} to={\"/page-2\"}></NavLink>\r\n          </NavItem> */}\r\n        {/* <NavItem>\r\n            <NavLink tag={Link} to={\"/page-3\"}>\r\n              page 3\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to={\"/page-4\"}>\r\n              page 4\r\n            </NavLink>\r\n          </NavItem> */}\r\n      </Nav>\r\n      {/* </Collapse>{\" \"} */}\r\n      <Logout />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PublicRoute.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\PrivateRoute.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\NotFound.js",["269"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport Ilustrasi from \"../assets/404.PNG\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n      <div className=\"text-center\">\r\n        {/* <p className=\"text-center\">Oops.. Halaman Tidak Ditemukan</p> */}\r\n        <img src={Ilustrasi} className=\"img-fluid w-75\" />\r\n        <p>\r\n          <Link className=\"btn btn-info mt-5\" to=\"/\">\r\n            Back to Dashboard\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Utils\\Common.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\Home.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\EditUser.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\DetailUserContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\Pupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\AuthPages\\Login.js",["270","271","272","273","274","275","276"],"import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Label, FormGroup, Container } from \"reactstrap\";\r\n\r\nimport { setUserSession, getData } from \"../../Utils/Common\";\r\n\r\nfunction Login(props) {\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const axios = require(\"axios\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const data = JSON.stringify({\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n    });\r\n\r\n    const config = {\r\n      method: \"post\",\r\n      url: \"http://localhost:8000/login\",\r\n      headers: {\r\n        \"APP-KEY\": \"okYC7opyhD4DTIauhPvMq2Wkvc6bz08t\",\r\n        Authorization:\r\n          \"Gradien 21232f297a57a5a743894a0e4a801fc3MAv5xkShGiocbZtloZJMyoyHJEWOSRwv3jXLrV71FxyuLs8jVVEQMDC54DBP23dDhuwDu9CEYYu3IiMNVMtqU0Lzj5vtWCWYBS9SlYD3EzIZDJesQ1UeD930qkkjo9HU\",\r\n        \"Access-Control-Request-Headers\": \"APP-KEY\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n    axios(config)\r\n      .then(function (response) {\r\n        if (response.data.status === \"ERROR\") {\r\n          setError(\"username atau password yang dimasukkan salah\");\r\n          setLoading(false);\r\n        } else {\r\n          setUserSession(\r\n            response.data.data.api_token,\r\n            response.data.data.username,\r\n            response.data.data.nik,\r\n            response.data.data.telp,\r\n            response.data.data.email,\r\n            response.data.data.id_profil\r\n          );\r\n\r\n          props.history.push(\"/\");\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className=\"login\"\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          boxSizing: \"border-box\",\r\n          backgroundColor: \"#F5F5F5\",\r\n        }}\r\n      >\r\n        <div className=\"d-flex flex-column align-items-center h-100 flex-lg-row\">\r\n          <div className=\"position-relative d-none d-lg-block h-100 width-left-content-3-5\">\r\n            <img\r\n              className=\"position-absolute img-fluid centered-content-3-5\"\r\n              src=\"http://api.elements.buildwithangga.com/storage/files/2/assets/Empty%20State/EmptyState3/Empty-3-5.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex mx-auto align-items-center justify-content-left width-right-content-3-5 \">\r\n            <div className=\"right-content-3-5\">\r\n              <div className=\"align-items-center justify-content-center d-lg-none d-flex\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src=\"http://api.elements.buildwithangga.com/storage/files/2/assets/Empty%20State/EmptyState3/Empty-3-5.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <h3 className=\"title-text-content-3-5\">\r\n                Log In untuk melanjutkan\r\n              </h3>\r\n              <p className=\"caption-text-content-3-5\">\r\n                Gunakan akun yang sudah didaftarkan\r\n              </p>\r\n              <form onSubmit={handleSubmit} action=\"\" method=\"post\">\r\n                {error && (\r\n                  <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    <span className=\"text-center\">{error}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"mb-2\">\r\n                  <label className=\"d-block input-label-content-3-5\">\r\n                    Username\r\n                  </label>\r\n                  <div className=\"d-flex w-100 div-input-content-3-5\">\r\n                    <svg\r\n                      className=\"icon-content-3-5 mr-2\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        clipRule=\"evenodd\"\r\n                        d=\"M5 5C3.34315 5 2 6.34315 2 8V16C2 17.6569 3.34315 19 5 19H19C20.6569 19 22 17.6569 22 16V8C22 6.34315 20.6569 5 19 5H5ZM5.49607 7.13174C5.01655 6.85773 4.40569 7.02433 4.13168 7.50385C3.85767 7.98337 4.02427 8.59422 4.50379 8.86823L11.5038 12.8682C11.8112 13.0439 12.1886 13.0439 12.4961 12.8682L19.4961 8.86823C19.9756 8.59422 20.1422 7.98337 19.8682 7.50385C19.5942 7.02433 18.9833 6.85773 18.5038 7.13174L11.9999 10.8482L5.49607 7.13174Z\"\r\n                        fill=\"#CACBCE\"\r\n                      />\r\n                    </svg>\r\n                    <input\r\n                      className=\"input-field-content-3-5\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      ref={usernameRef}\r\n                      placeholder=\"Username anda\"\r\n                      autoComplete=\"off\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <label className=\"d-block input-label-content-3-5\">\r\n                    Password\r\n                  </label>\r\n                  <div className=\"d-flex w-100 div-input-content-3-5\">\r\n                    <svg\r\n                      className=\"icon-content-3-5 mr-2\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        clipRule=\"evenodd\"\r\n                        d=\"M7.81592 4.25974C7.12462 5.48872 7 6.95088 7 8H6C4.34315 8 3 9.34315 3 11V19C3 20.6569 4.34315 22 6 22H18C19.6569 22 21 20.6569 21 19V11C21 9.34315 19.6569 8 18 8L17 7.99998C17 6.95087 16.8754 5.48871 16.1841 4.25973C15.829 3.62845 15.3194 3.05012 14.6031 2.63486C13.8875 2.22005 13.021 2 12 2C10.979 2 10.1125 2.22005 9.39691 2.63486C8.68058 3.05012 8.17102 3.62845 7.81592 4.25974ZM9.55908 5.24026C9.12538 6.01128 9 7.04912 9 8H15C15 7.04911 14.8746 6.01129 14.4409 5.24027C14.2335 4.87155 13.9618 4.57488 13.6 4.36514C13.2375 4.15495 12.729 4 12 4C11.271 4 10.7625 4.15495 10.4 4.36514C10.0382 4.57488 9.76648 4.87155 9.55908 5.24026ZM14 14C14 14.7403 13.5978 15.3866 13 15.7324V17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17V15.7324C10.4022 15.3866 10 14.7403 10 14C10 12.8954 10.8954 12 12 12C13.1046 12 14 12.8954 14 14Z\"\r\n                        fill=\"#CACBCE\"\r\n                      />\r\n                    </svg>\r\n                    <input\r\n                      className=\"input-field-content-3-5\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      ref={passwordRef}\r\n                      placeholder=\"Password anda\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <button\r\n                  className=\"btn btn-fill-content-3-5 d-block w-100 text-white rounded\"\r\n                  type=\"submit\"\r\n                >\r\n                  Log In Ke Akun Saya\r\n                  {loading ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm ml-2 mb-1\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\CreateLahan.js",["277"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postLahanCreate } from \"../../../actions/lahanAction\";\r\nimport FormComponentLahan from \"../../../component/Form/FormComponentLahan\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataLahan: state.lahan.getResponseDataLahan,\r\n    errorResponseDataLahan: state.lahan.errorResponseDataLahan,\r\n  };\r\n};\r\nclass CreateLahan extends Component {\r\n  handleSubmit(data) {\r\n    \r\n    this.props.dispatch(postLahanCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataLahan || this.props.errorResponseDataLahan) {\r\n      if (this.props.getResponseDataLahan) {\r\n        swal(\"Lahan Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Lahan</h4>\r\n        <FormComponentLahan onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreateLahan);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\DetailPupukContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\DetailPanenContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\DetailLahanContainer.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\Lahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\EditPupuk.js",["278"],"import React, { Component } from \"react\";\r\nimport FormComponentPupuk from \"../../../component/Form/FormComponentPupuk\";\r\nimport { getPupukDetail, putPupukUpdate } from \"../../../actions/pupukAction\";\r\nimport swal from \"sweetalert\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataPupuk: state.pupuk.getResponseDataPupuk,\r\n    errorResponseDataPupuk: state.pupuk.errorResponseDataPupuk,\r\n    getPupukDetail: state.pupuk.getPupukDetail,\r\n    errorResponseDataPupuk: state.pupuk.errorResponseDataPupuk,\r\n  };\r\n};\r\n\r\nclass EditPupuk extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getPupukDetail(this.props.match.params.id));\r\n  }\r\n  handleSubmit(data) {\r\n    this.props.dispatch(putPupukUpdate(data, this.props.match.params.id));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.getResponseDataPupuk || this.props.errorResponseDataPupuk) {\r\n      if (this.props.errorResponseDataPupuk) {\r\n        swal(\"Failed!\", this.props.errorResponseDataPupuk, \"error\");\r\n      } else {\r\n        swal({\r\n          title: \"Pupuk Updated !\",\r\n          icon: \"success\",\r\n          button: \"Oke\",\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {this.props.getPupukDetail ? (\r\n          <>\r\n            <h4 className=\"text-secondary\">Edit Pupuk</h4>\r\n            <FormComponentPupuk onSubmit={(data) => this.handleSubmit(data)} />\r\n          </>\r\n        ) : (\r\n          <div className=\"text-center\">\r\n            <div class=\"spinner-grow text-info\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EditPupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\Panen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\CreatePanen.js",["279"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postPanenCreate } from \"../../../actions/panenAction\";\r\nimport FormComponentPanen from \"../../../component/Form/FormComponentPanen\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataPanen: state.panen.getResponseDataPanen,\r\n    errorResponseDataPanen: state.panen.errorResponseDataPanen,\r\n  };\r\n};\r\nclass CreatePanen extends Component {\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n    this.props.dispatch(postPanenCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataPanen || this.props.errorResponseDataPanen) {\r\n      if (this.props.getResponseDataPanen) {\r\n        swal(\"Panen Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Panen</h4>\r\n        <FormComponentPanen onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreatePanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Dashboard\\Dashboard.js",["280","281","282","283","284","285","286"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TotalUserPict from \"../../../assets/TotalUserPict.svg\";\r\nimport TotalLahanPict from \"../../../assets/TotalLahanPict.svg\";\r\nimport TotalArtikelPict from \"../../../assets/TotalArtikelPict.svg\";\r\nimport TotalPartnerPict from \"../../../assets/TotalPartnerPict.svg\";\r\nimport TotalPupukTerdistribusiPict from \"../../../assets/TotalPupukTerdistribusiPict.svg\";\r\nimport TotalVarietasPict from \"../../../assets/TotalVarietasPict.svg\";\r\nimport EventCalender from \"../../../component/Calender/EventCalender\";\r\nimport { getTotalList } from \"../../../actions/masterAction\";\r\nimport { getData } from \"../../../Utils/Common\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getTotalList: state.master.getTotalList,\r\n    errorTotalList: state.master.errorTotalList,\r\n  };\r\n};\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getTotalList());\r\n  }\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"position-relative\">\r\n        <div className=\"row \">\r\n          <div className=\"col-xl-8 mx-auto\">\r\n            <div className=\"row \">\r\n              <div className=\"col-md-6 mb-3 \">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalUserPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total User\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_petani}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mb-3\">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalLahanPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total Lahan\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_lahan}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col mb-3\">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalVarietasPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total Varietas\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_varietas}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mb-3\">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalPupukTerdistribusiPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total Pupuk Terdistribusi\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_pupuk}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>{\" \"}\r\n              {/* Total Partner */}\r\n              <div className=\"col-md-6 mb-3\">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalPartnerPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total Partner\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_poktan}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mb-3 \">\r\n                <div\r\n                  className=\"w-100 p-3\"\r\n                  style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n                >\r\n                  <div align=\"center\">\r\n                    <img src={TotalArtikelPict} />\r\n                    <h6\r\n                      style={{ fontSize: \"18px\", color: \"#B8B7B7\" }}\r\n                      className=\" mt-3\"\r\n                    >\r\n                      Total Artikel\r\n                    </h6>\r\n                    <h6 style={{ fontSize: \"48px\" }}>\r\n                      {this.props.getTotalList.total_artikel}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n          </div>\r\n          <div className=\"col-xl-4 \">\r\n            <div\r\n              className=\" p-3\"\r\n              style={{ border: \"1px solid #0CC23F\", borderRadius: \"10px\" }}\r\n            >\r\n              <EventCalender />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Pupuk\\CreatePupuk.js",["287"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { postPupukCreate } from \"../../../actions/pupukAction\";\r\nimport FormComponentPupuk from \"../../../component/Form/FormComponentPupuk\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponseDataPupuk: state.pupuk.getResponseDataPupuk,\r\n    errorResponseDataPupuk: state.pupuk.errorResponseDataPupuk,\r\n  };\r\n};\r\nclass CreatePupuk extends Component {\r\n  handleSubmit(data) {\r\n  \r\n    this.props.dispatch(postPupukCreate(data));\r\n  }\r\n  render() {\r\n    if (this.props.getResponseDataPupuk || this.props.errorResponseDataPupuk) {\r\n      if (this.props.getResponseDataPupuk) {\r\n        swal(\"Pupuk Created\", { icon: \"success\" });\r\n      } else {\r\n        swal(\"Failed Created\", \"error\");\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <h4 className=\"text-secondary\">Tambah Pupuk</h4>\r\n        <FormComponentPupuk onSubmit={(data) => this.handleSubmit(data)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(CreatePupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Panen\\EditPanen.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Home\\CreateUser.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Lahan\\EditLahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\pupukAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\userAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\lahanAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\masterAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\panenAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Sidebar\\Logout.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPupuk.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentLahan.js",["288","289","290","291"],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPupuk.js",["292","293","294"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus } from \"react-feather\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deletePupuk } from \"../../actions/pupukAction\";\r\n\r\nconst handleClick = (dispatch, id, jenis_pupuk) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan pupuk dengan nama  : \" + jenis_pupuk,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deletePupuk(id));\r\n      swal({\r\n        title: \"Berhasil Delete Pupuk!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n//buat sorted\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\n\r\n//buat search\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukList: state.pupuk.getPupukList,\r\n    errorPupukList: state.pupuk.errorPupukList,\r\n  };\r\n};\r\n\r\nconst TableComponentPupuk = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getPupukList.length,\r\n      },\r\n    ],\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"petani\",\r\n      text: \"Identitas\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.petani}</small>\r\n            <br />\r\n            <small>{row.poktan}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"jenis_pupuk\",\r\n      text: \"Jenis\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>Jenis : {row.jenis_pupuk}</small>\r\n            <br />\r\n            <small>Kapasitas : {row.kapasitas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tgl_distribusi\",\r\n      text: \"Tanggal Distribusi\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Action\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-pupuk/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle\r\n                className=\"ml-1\"\r\n                color=\"transparent\"\r\n                size=\"sm\"\r\n                outline\r\n              >\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-pupuk/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() =>\r\n                    handleClick(props.dispatch, row.id, row.jenis_pupuk)\r\n                  }\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const data = props.getPupukList;\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {props.getPupukList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getPupukList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-pupuk\">\r\n                <button type=\"button\" className=\"btn btn-light rounded\">\r\n                  <span>\r\n                    Tambah Pupuk <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorPupukList ? (\r\n            <h2>{props.errorPupukList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentPupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentUser.js",["295","296","297","298","299","300","301","302"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deleteUser, getUsersList } from \"../../actions/userAction\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus, User } from \"react-feather\";\r\nimport Photo from \"../../assets/user.png\";\r\nimport Kirito from \"../../assets/tester.jpg\";\r\n\r\nconst handleClick = (dispatch, id, nama) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus user dengan nama : \" + nama,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteUser(id));\r\n\r\n      swal({\r\n        title: \"Berhasil Delete User!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getUsersList: state.users.getUsersList,\r\n    errorUsersList: state.users.errorUsersList,\r\n  };\r\n};\r\n\r\nconst TableComponentUser = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getUsersList.length,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const url = \"http://localhost:8000\";\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"nama\",\r\n      text: \"Identitas\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <div className=\"d-flex align-items-center \">\r\n              <div style={{ width: \"50px\", height: \"50px\" }}>\r\n                {row.foto_profil ? (\r\n                  <img\r\n                    src={url + row.foto_profil}\r\n                    className=\"rounded-circle h-100 w-100 border border-primary \"\r\n                  ></img>\r\n                ) : (\r\n                  <img\r\n                    src={Photo}\r\n                    className=\"rounded-circle h-100 w-100  border border-primary\"\r\n                  ></img>\r\n                )}\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <small>{row.nama}</small>\r\n                <br />\r\n                <small>{row.telp}</small>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"pekerjaan\",\r\n      text: \"Pekerjaan\",\r\n\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.pekerjaan}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Riwayat\",\r\n\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>Jensi Kelamin : {row.gender} </small>\r\n            <br />\r\n            <small>Pendidikan : {row.pendidikan}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"provinsi\",\r\n      text: \"Provinsi\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>Desa : {row.desa} </small>\r\n            <br />\r\n            <small>Kecamatan : {row.kecamatan} </small>\r\n            <br />\r\n            <small>Kabupaten : {row.kabupaten} </small>\r\n            <br />\r\n            <small>Provinsi : {row.provinsi} </small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      text: \"Action\",\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-user/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle className=\"ml-1\" color=\"transparent\" size=\"sm\">\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-user/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() => handleClick(props.dispatch, row.id, row.nama)}\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {props.getUsersList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getUsersList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-user\">\r\n                <button type=\"button\" className=\"btn btn-light rounded \">\r\n                  <span>\r\n                    Tambah Petani <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorUsersList ? (\r\n            <h2>{props.errorUsersList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentPanen.js",["303"],"import React, { Component } from \"react\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport UserValidation from \"../../Validations/UserValidation\";\r\nimport { getUsersList } from \"../../actions/userAction\";\r\nimport { getTipeUserList, getKomoditasList } from \"../../actions/masterAction\";\r\nimport { getFilterLahan } from \"../../actions/lahanAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.panen.getPanenDetail.id,\r\n      kategori: state.panen.getPanenDetail.kategori,\r\n      varietas: state.panen.getPanenDetail.varietas,\r\n      total_panen: state.panen.getPanenDetail.id_petani,\r\n      satuan: state.panen.getPanenDetail.satuan,\r\n      usia_tanam: state.panen.getPanenDetail.usia_tanam,\r\n      id_petani: state.panen.getPanenDetail.id_petani,\r\n      id_instansi: state.panen.getPanenDetail.id_instansi,\r\n      id_lahan: state.panen.getPanenDetail.id_lahan,\r\n      tgl_panen: state.panen.getPanenDetail.tgl_panen,\r\n      tgl_tanam: state.panen.getPanenDetail.tgl_tanam,\r\n      tgl_panen: state.panen.getPanenDetail.tgl_panen,\r\n      keterangan: state.panen.getPanenDetail.keterangan,\r\n    },\r\n    lahan: {\r\n      filter: state.lahan.getFilterLahan,\r\n    },\r\n    master: {\r\n      tipeUser: state.master.getTipeUserList,\r\n      komoditas: state.master.getKomoditasList,\r\n    },\r\n    user: {\r\n      petani: state.users.getUsersList,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormComponentPanen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id_petani: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getTipeUserList());\r\n    this.props.dispatch(getKomoditasList());\r\n    this.props.dispatch(getUsersList());\r\n  }\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{input}\" className=\"col-form-label text-capitalize\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Petani\" ? (\r\n          <Input\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={(e) => {\r\n              e.preventDefault();\r\n              this.setState({\r\n                id_petani: e.target.value,\r\n              });\r\n              this.props.dispatch(getFilterLahan(e.target.value));\r\n            }}\r\n          >\r\n            <option value={0}></option>\r\n            {this.props.user.petani &&\r\n              this.props.user.petani.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Lahan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n            >\r\n              <option value={0}></option>\r\n              {this.props.lahan.filter &&\r\n                this.props.lahan.filter.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.alamat}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Tipe User\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.tipeUser &&\r\n              this.props.master.tipeUser.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Varietas\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.komoditas &&\r\n              this.props.master.komoditas.map((item, i) => {\r\n                return (\r\n                  <option key={i.id} value={item.id}>\r\n                    {item.nama}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Satuan\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              <option value={101}>Kg</option>\r\n            </Input>\r\n          </>\r\n        ) : (\r\n          <Input {...input} type={type} placeholder={placeholder}></Input>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n            (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"kategori\"\r\n                component={this.renderField}\r\n                label=\"Tipe User\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"varietas\"\r\n                component={this.renderField}\r\n                label=\"Varietas\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"total_panen\"\r\n                component={this.renderField}\r\n                label=\"Total Panen\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"satuan\"\r\n                component={this.renderField}\r\n                label=\"Satuan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"usia_tanam\"\r\n                component={this.renderField}\r\n                label=\"Usia Tanam\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_petani\"\r\n                component={this.renderField}\r\n                label=\"Petani\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          {/* <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"id_instansi\"\r\n                component={this.renderField}\r\n                label=\"Instansi\"\r\n              />\r\n            </FormGroup>\r\n          </Col> */}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"select\"\r\n                name=\"id_lahan\"\r\n                component={this.renderField}\r\n                label=\"Lahan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"date\"\r\n                name=\"tgl_tanam\"\r\n                component={this.renderField}\r\n                label=\"Tanggal Tanam\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"date\"\r\n                name=\"tgl_panen\"\r\n                component={this.renderField}\r\n                label=\"Tanggal Panen\"\r\n              />\r\n            </FormGroup>\r\n          </Col>{\" \"}\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"keterangan\"\r\n                component={this.renderField}\r\n                label=\"Keterangan\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"info\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponentPanen = reduxForm({\r\n  form: \"CreatePanen\",\r\n  validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponentPanen);\r\nexport default connect(mapStateToProps, null)(FormComponentPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentLahan.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPanen.js",["304"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPanenDetail: state.panen.getPanenDetail,\r\n    errorPanenDetail: state.panen.errorPanenDetail,\r\n  };\r\n};\r\nconst DetailPanen = (props) => {\r\n  console.log(props.getPanenDetail);\r\n  return (\r\n    <>\r\n      {props.getPanenDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              {\" \"}\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Panen</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPanenDetail.petani}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Tanggal Tana</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.tgl_tanam}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Tanggal Panen</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {\" \"}\r\n                    {props.getPanenDetail.tgl_panen}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Total Panen</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.total_panen}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPanenDetail.satuan}</h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Varietas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.varietas}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kategori</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.kategori}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Lahan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_lahan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_petani}\r\n                  </h6>\r\n                </div>{\" \"}\r\n                <div className=\" border-bottom col-3\">\r\n                  <h6 className=\"text-black-50\">ID Instansi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPanenDetail.id_instansi}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/edit-panen/\" + props.getPanenDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Panen\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailUser.js",["305","306"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport Photo from \"../../assets/user.png\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getUsersDetail: state.users.getUsersDetail,\r\n    errorUsersDetail: state.users.errorUsersDetail,\r\n  };\r\n};\r\nconst DetailUser = (props) => {\r\n  return (\r\n    <>\r\n      {props.getUsersDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          {\" \"}\r\n          <h4 className=\"text-secondary ml-3 mt-4 mb-4\">Detail User</h4>\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-6 d-flex justify-content-center align-items-center\">\r\n              {\" \"}\r\n              <div className=\"p-5 \">\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <img\r\n                    src={props.getUsersDetail.foto_ktp}\r\n                    className=\"rounded-circle border border-secondary \"\r\n                    style={{ width: \"120px\" }}\r\n                    alt=\"Foto Profi\"\r\n                  />{\" \"}\r\n                  {console.log(`props.getUsersDetail.foto_ktp`)}\r\n                </div>\r\n                <h3 className=\"text-black mt-3 text-center\">\r\n                  {props.getUsersDetail.nama}\r\n                </h3>\r\n                <h6 className=\"text-black-50\">{props.getUsersDetail.email}</h6>\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                  <Link\r\n                    className=\" btn btn-info\"\r\n                    to={\"/edit-user/\" + props.getUsersDetail.id}\r\n                  >\r\n                    Edit Profil\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"shadow-sm rounded col-md-6 p-3 p-md-5 \">\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Jenis Kelamin</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.gender}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Tanggal Lahir</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getUsersDetail.tgl_lahir}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Nomor Telepon</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.telp}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Alamat</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.alamat}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Agama</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.agama}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Pekerjaan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getUsersDetail.pekerjaan}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Nomor Induk Keluarga</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.nik}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kartu Keluarga</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.kk}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kategori</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getUsersDetail.kategori}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Pendidikan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getUsersDetail.pendidikan}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Facebook</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getUsersDetail.facebook}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Suku</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getUsersDetail.suku}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-12 pb-3\">\r\n              <div className=\"p-3\">\r\n                <h4 className=\"text-secondary mt-4 mb-4\">Detail Alamat</h4>\r\n                <div className=\"row  justify-content-around\">\r\n                  <div className=\" border-bottom col-md-3 col-5\">\r\n                    <h6 className=\"text-black-50\">Provinsi</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\">\r\n                      {props.getUsersDetail.provinsi}\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\" border-bottom col-md-3 col-5\">\r\n                    <h6 className=\"text-black-50\">Kabupaten</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\">\r\n                      {props.getUsersDetail.kabupaten}\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\" border-bottom mt-3 mt-md-0 col-md-3 col-5\">\r\n                    <h6 className=\"text-black-50\">Kecamatan</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\">\r\n                      {props.getUsersDetail.kecamatan}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-5  justify-content-around\">\r\n                  <div className=\" border-bottom col-md-3 col-5\">\r\n                    <h6 className=\"text-black-50\">Kelurahan</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\">{props.getUsersDetail.desa}</h6>\r\n                  </div>\r\n\r\n                  <div className=\" border-bottom col-md-1 col-5\">\r\n                    <h6 className=\"text-black-50 \">RT</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\"> {props.getUsersDetail.rt}</h6>\r\n                  </div>\r\n                  <div className=\" border-bottom col-md-1 col-5\">\r\n                    <h6 className=\"text-black-50 mt-3 mt-md-0 \">RW</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\"> {props.getUsersDetail.rw}</h6>\r\n                  </div>\r\n                  <div className=\" border-bottom col-md-1 col-5 mt-3 mt-md-0\">\r\n                    <h6 className=\"text-black-50  \">Kodepos</h6>\r\n                    <br />\r\n                    <h6 className=\"text-black\">\r\n                      {props.getUsersDetail.kodepos}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailLahan.js",["307","308","309"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport Photo from \"../../assets/user.png\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLahanDetail: state.lahan.getLahanDetail,\r\n    errorLahanDetail: state.lahan.errorLahanDetail,\r\n  };\r\n};\r\nconst DetailLahan = (props) => {\r\n  console.log(props.getLahanDetail);\r\n  return (\r\n    <>\r\n      {props.getLahanDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Lahan</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.petani}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Kategori</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.kategori}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Luas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.luas}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getLahanDetail.satuan}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.id_petani}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.poktan}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getLahanDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-6\">\r\n                  <h6 className=\"text-black-50\">Alamat</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getLahanDetail.alamat}</h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pb-3\">\r\n                  <div className=\"p-3\">\r\n                    <h4 className=\"text-secondary mt-4 mb-4\">Detail Alamat</h4>\r\n                    <div className=\"row  justify-content-around\">\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Provinsi</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.provinsi}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kabupaten</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kabupaten}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom mt-3 mt-md-0 col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kecamatan</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kecamatan}\r\n                        </h6>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mt-5  justify-content-around\">\r\n                      <div className=\" border-bottom col-md-3 col-5\">\r\n                        <h6 className=\"text-black-50\">Kelurahan</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.desa}\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\" border-bottom col-md-1 col-5\">\r\n                        <h6 className=\"text-black-50 \">RT</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {\" \"}\r\n                          {props.getLahanDetail.rt}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-1 col-5\">\r\n                        <h6 className=\"text-black-50 mt-3 mt-md-0 \">RW</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {\" \"}\r\n                          {props.getLahanDetail.rw}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\" border-bottom col-md-1 col-5 mt-3 mt-md-0\">\r\n                        <h6 className=\"text-black-50  \">Kodepos</h6>\r\n                        <br />\r\n                        <h6 className=\"text-black\">\r\n                          {props.getLahanDetail.kodepos}\r\n                        </h6>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/edit-lahan/\" + props.getLahanDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Lahan\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailLahan);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Detail\\DetailPupuk.js",["310","311"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukDetail: state.pupuk.getPupukDetail,\r\n    errorPupukDetail: state.pupuk.errorPupukDetail,\r\n  };\r\n};\r\nconst DetailPupuk = (props) => {\r\n  console.log(props.getPupukDetail);\r\n  return (\r\n    <>\r\n      {props.getPupukDetail ? (\r\n        <div className=\"container-fluid overflow-hidden\">\r\n          <div className=\"row\">\r\n            <div className=\"shadow-sm rounded col-md-12 p-3 p-md-5 \">\r\n              {\" \"}\r\n              <h4 className=\"text-secondary mt-4 mb-4\">Detail Pupuk</h4>\r\n              <div className=\"row d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Jenis Pupuk</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.jenis_pupuk}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPupukDetail.petani}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">Kapasitas</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.kapasitas}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Satuan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\"> {props.getPupukDetail.satuan}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5 overflow-auto\">\r\n                  <h6 className=\"text-black-50\">ID Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.id_poktan}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">ID Petani</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.id_petani}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Instansi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.instansi}\r\n                  </h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Tanggal Distribusi</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.tgl_distribusi}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-5 d-flex justify-content-around\">\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Poktan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">{props.getPupukDetail.poktan}</h6>\r\n                </div>\r\n                <div className=\" border-bottom col-5\">\r\n                  <h6 className=\"text-black-50\">Keterangan</h6>\r\n                  <br />\r\n                  <h6 className=\"text-black\">\r\n                    {props.getPupukDetail.keterangan}\r\n                  </h6>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                <Link\r\n                  to={\"/edit-pupuk/\" + props.getPupukDetail.id}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update Pupuk\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"h-75 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailPupuk);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormComponentUser.js",["312","313","314"],"import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport UserValidation from \"../../Validations/UserValidation\";\r\nimport Photo from \"../../assets/user.png\";\r\nimport {\r\n  getProvinsiList,\r\n  getKabupatenList,\r\n  getKecamatanList,\r\n  getKelurahanList,\r\n  getGenderList,\r\n  getAgamaList,\r\n  getPendidikanList,\r\n  getGolonganDarahList,\r\n  getSukuList,\r\n  getPekerjaanList,\r\n  getTipeUserList,\r\n  getSatuanList,\r\n} from \"../../actions/masterAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.users.getUsersDetail.id,\r\n      nama: state.users.getUsersDetail.nama,\r\n      nik: state.users.getUsersDetail.nik,\r\n      kk: state.users.getUsersDetail.kk,\r\n      kategori: state.users.getUsersDetail.kategori,\r\n      pekerjaan: state.users.getUsersDetail.pekerjaan,\r\n      gender: state.users.getUsersDetail.gender,\r\n      agama: state.users.getUsersDetail.agama,\r\n      suku: state.users.getUsersDetail.suku,\r\n      tgl_lahir: state.users.getUsersDetail.tgl_lahir,\r\n      pendidikan: state.users.getUsersDetail.pendidikan,\r\n      alamat: state.users.getUsersDetail.alamat,\r\n      rt: state.users.getUsersDetail.rt,\r\n      rw: state.users.getUsersDetail.rw,\r\n      id_desa: state.users.getUsersDetail.id_desa,\r\n      id_kecamatan: state.users.getUsersDetail.id_kecamatan,\r\n      id_kabupaten: state.users.getUsersDetail.id_kabupaten,\r\n      id_provinsi: state.users.getUsersDetail.id_provinsi,\r\n      kodepos: state.users.getUsersDetail.kodepos,\r\n      foto_profil: state.users.getUsersDetail.foto_profil,\r\n      foto_kk: state.users.getUsersDetail.foto_kk,\r\n      foto_ktp: state.users.getUsersDetail.foto_ktp,\r\n      gol_darah: state.users.getUsersDetail.gol_darah,\r\n      telp: state.users.getUsersDetail.telp,\r\n      email: state.users.getUsersDetail.email,\r\n      facebook: state.users.getUsersDetail.facebook,\r\n      id_user: state.users.getUsersDetail.id_user,\r\n    },\r\n    master: {\r\n      provinsi: state.master.getProvinsiList,\r\n      kabupaten: state.master.getKabupatenList,\r\n      kecamatan: state.master.getKecamatanList,\r\n      kelurahan: state.master.getKelurahanList,\r\n      gender: state.master.getGenderList,\r\n      agama: state.master.getAgamaList,\r\n      pendidikan: state.master.getPendidikanList,\r\n      golonganDarah: state.master.getGolonganDarahList,\r\n      suku: state.master.getSukuList,\r\n      pekerjaan: state.master.getPekerjaanList,\r\n      tipeUser: state.master.getTipeUserList,\r\n      satuan: state.master.getSatuanList,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormComponentUser extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getProvinsiList());\r\n    this.props.dispatch(getGenderList());\r\n    this.props.dispatch(getAgamaList());\r\n    this.props.dispatch(getPendidikanList());\r\n    this.props.dispatch(getGolonganDarahList());\r\n    this.props.dispatch(getSukuList());\r\n    this.props.dispatch(getPekerjaanList());\r\n    this.props.dispatch(getTipeUserList());\r\n    this.props.dispatch(getSatuanList());\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id_provinsi: 0,\r\n      id_kabupaten: 0,\r\n      id_kecamatan: 0,\r\n      id_kelurahan: 0,\r\n      file: null,\r\n      base64URL: \"\",\r\n    };\r\n  }\r\n  getBase64 = (file) => {\r\n    return new Promise((resolve) => {\r\n      let fileInfo;\r\n      let baseURL = \"\";\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onload = () => {\r\n        baseURL = reader.result;\r\n        resolve(baseURL);\r\n      };\r\n    });\r\n  };\r\n\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{label}\" className=\"col-form-label text-secondary\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Gender\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n\r\n              {this.props.master.gender &&\r\n                this.props.master.gender.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Agama\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n            {this.props.master.agama &&\r\n              this.props.master.agama.map((item, i) => {\r\n                return (\r\n                  <>\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  </>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Pendidikan\" ? (\r\n          <Input {...input} type={type} placeholder={placeholder}>\r\n            <option value={0}></option>\r\n\r\n            {this.props.master.pendidikan &&\r\n              this.props.master.pendidikan.map((item, i) => {\r\n                return (\r\n                  <>\r\n                    <option key={i.id} value={item.id}>\r\n                      {item.nama}\r\n                    </option>\r\n                  </>\r\n                );\r\n              })}\r\n          </Input>\r\n        ) : label === \"Suku\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n\r\n              {this.props.master.suku &&\r\n                this.props.master.suku.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Pekerjaan\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.pekerjaan &&\r\n                this.props.master.pekerjaan.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Golongan Darah\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.golonganDarah &&\r\n                this.props.master.golonganDarah.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Tipe User\" ? (\r\n          <>\r\n            <Input {...input} type={type} placeholder={placeholder}>\r\n              <option value={0}></option>\r\n              {this.props.master.tipeUser &&\r\n                this.props.master.tipeUser.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option key={i.id} value={item.id}>\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Provinsi\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_provinsi: e.target.selectedOptions[0].id,\r\n                  id_kabupaten: 0,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n\r\n                this.props.dispatch(\r\n                  getKabupatenList(e.target.selectedOptions[0].id)\r\n                );\r\n                {\r\n                  console.log(\"id provinsi : \", e.target.selectedOptions[0].id);\r\n                }\r\n              }}\r\n            >\r\n              <option value={0}>Provinsi</option>\r\n              {this.props.master.provinsi &&\r\n                this.props.master.provinsi.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.provinsi}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kabupaten\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kabupaten: e.target.selectedOptions[0].id,\r\n                  id_kecamatan: 0,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKecamatanList(\r\n                    this.state.id_provinsi,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n                console.log(\"id kabupaten : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kabupaten / Kota</option>\r\n              {this.props.master.kabupaten &&\r\n                this.props.master.kabupaten.map((item, i) => {\r\n                  return (\r\n                    <>\r\n                      <option\r\n                        key={i.id}\r\n                        value={item.id}\r\n                        id={item.kabupatenkota}\r\n                      >\r\n                        {item.nama}\r\n                      </option>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kecamatan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kecamatan: e.target.selectedOptions[0].id,\r\n                  id_kelurahan: 0,\r\n                });\r\n                this.props.dispatch(\r\n                  getKelurahanList(\r\n                    this.state.id_provinsi,\r\n                    this.state.id_kabupaten,\r\n                    e.target.selectedOptions[0].id\r\n                  )\r\n                );\r\n\r\n                console.log(\"id kecamatan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kecamatan</option>\r\n              {this.props.master.kecamatan &&\r\n                this.props.master.kecamatan.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.kecamatan}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : label === \"Kelurahan\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.setState({\r\n                  id_kelurahan: e.target.selectedOptions[0].id,\r\n                });\r\n                console.log(\"Id kelurahan : \", e.target.selectedOptions[0].id);\r\n              }}\r\n            >\r\n              <option value={0}>Kelurahan</option>\r\n              {this.props.master.kelurahan &&\r\n                this.props.master.kelurahan.map((item, i) => {\r\n                  return (\r\n                    <option key={i.id} value={item.id} id={item.kelurahan}>\r\n                      {item.nama}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Input>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              placeholder={placeholder}\r\n              autoComplete=\"off\"\r\n            ></Input>\r\n          </>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <small style={{ color: \"red\" }}>{error}</small>) ||\r\n            (warning && <span style={{ color: \"brown\" }}>{warning}</span>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.props.handleSubmit}>\r\n          <h4 className=\"text-black-50 mt-4\">Identitas</h4>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"nama\"\r\n                  component={this.renderField}\r\n                  label=\"Nama\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  component={this.renderField}\r\n                  label=\"Email\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"telp\"\r\n                  component={this.renderField}\r\n                  label=\"Nomor Telepon\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"nik\"\r\n                  component={this.renderField}\r\n                  label=\"NIK\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"kk\"\r\n                  component={this.renderField}\r\n                  label=\"Kartu Keluarga\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"kategori\"\r\n                  component={this.renderField}\r\n                  label=\"Tipe User\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"pekerjaan\"\r\n                  component={this.renderField}\r\n                  label=\"Pekerjaan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  label=\"Gender\"\r\n                  name=\"gender\"\r\n                  type=\"select\"\r\n                  component={this.renderField}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  name=\"agama\"\r\n                  type=\"select\"\r\n                  component={this.renderField}\r\n                  label=\"Agama\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"suku\"\r\n                  component={this.renderField}\r\n                  label=\"Suku\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"date\"\r\n                  name=\"tgl_lahir\"\r\n                  component={this.renderField}\r\n                  label=\"Tanggal Lahir\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"pendidikan\"\r\n                  component={this.renderField}\r\n                  label=\"Pendidikan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"gol_darah\"\r\n                  component={this.renderField}\r\n                  label=\"Golongan Darah\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"facebook\"\r\n                  component={this.renderField}\r\n                  label=\"Facebook\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n          <h4 className=\"text-black-50 mt-4\">Lokasi</h4>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"alamat\"\r\n                  component={this.renderField}\r\n                  label=\"Alamat\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"rt\"\r\n                  component={this.renderField}\r\n                  label=\"RT\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"rw\"\r\n                  component={this.renderField}\r\n                  label=\"RW\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_provinsi\"\r\n                  component={this.renderField}\r\n                  label=\"Provinsi\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_kabupaten\"\r\n                  component={this.renderField}\r\n                  label=\"Kabupaten\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_kecamatan\"\r\n                  component={this.renderField}\r\n                  label=\"Kecamatan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"select\"\r\n                  name=\"id_desa\"\r\n                  component={this.renderField}\r\n                  label=\"Kelurahan\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"kodepos\"\r\n                  component={this.renderField}\r\n                  label=\"KodePos\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col md=\"12\">\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"info\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Simpan\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponentUser = reduxForm({\r\n  form: \"CreateUser\",\r\n  validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponentUser);\r\nexport default connect(mapStateToProps, null)(FormComponentUser);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Table\\TableComponentPanen.js",["315","316","317","318"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Spinner,\r\n  Table,\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { MoreVertical, Edit, Trash, Eye, UserPlus } from \"react-feather\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { deletePanen } from \"../../actions/panenAction\";\r\n\r\nconst handleClick = (dispatch, id, varietas) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan Panen dengan nama  : \" + varietas,\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deletePanen(id));\r\n      swal({\r\n        title: \"Berhasil Delete Panen!\",\r\n        icon: \"success\",\r\n        button: \"Oke\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n//buat sorted\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"desc\",\r\n  },\r\n];\r\n\r\n//buat search\r\nconst { SearchBar } = Search;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPanenList: state.panen.getPanenList,\r\n    errorPanenList: state.panen.errorPanenList,\r\n  };\r\n};\r\n\r\nconst TableComponentPanen = (props) => {\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      Showing {from} to {to} of {size} Results\r\n    </span>\r\n  );\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    hideSizePerPage: true,\r\n    hidePageListOnlyOnePage: true,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [\r\n      {\r\n        text: \"10\",\r\n        value: 10,\r\n      },\r\n      {\r\n        text: \"All\",\r\n        value: props.getPanenList.length,\r\n      },\r\n    ],\r\n  };\r\n  const columns = [\r\n    {\r\n      dataField: \"petani\",\r\n      text: \"Petani\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"alamat\",\r\n      text: \"Lokasi\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.alamat}</small>\r\n            <small>{row.luas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"kategori\",\r\n      text: \"Kategori\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small> Kategori : {row.kategori}</small>\r\n            <br />\r\n            <small> Varietas : {row.varietas}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"totalpanen\",\r\n      text: \"Panen\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.total_panen}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tgl_tanam\",\r\n      text: \"Tanam / Panen\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <small>{row.tgl_tanam} / </small> <small>{row.tgl_panen}</small>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Action\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: \"#f3f2f7\",\r\n        border: \"none\",\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <>\r\n            <UncontrolledDropdown>\r\n              <Link\r\n                to={\"detail-panen/\" + row.id}\r\n                className=\"text-decoration-none \"\r\n              >\r\n                <Eye className=\" text-black-50\" size={15} />\r\n              </Link>\r\n              <DropdownToggle\r\n                className=\"ml-1\"\r\n                color=\"transparent\"\r\n                size=\"sm\"\r\n                outline\r\n              >\r\n                <MoreVertical size={15} />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={(e) => e.preventDefault()}>\r\n                  <Link\r\n                    to={\"edit-panen/\" + row.id}\r\n                    className=\"text-decoration-none \"\r\n                  >\r\n                    <h6>\r\n                      <span>\r\n                        <Edit className=\" text-black-50 mr-1\" size={15} />\r\n                      </span>\r\n                      <span className=\"align-middle text-black-50 mb-2\">\r\n                        Edit\r\n                      </span>\r\n                    </h6>\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={() =>\r\n                    handleClick(props.dispatch, row.id, row.varietas)\r\n                  }\r\n                >\r\n                  <h6>\r\n                    <span>\r\n                      <Trash className=\"mr-1 text-black-50\" size={15} />\r\n                    </span>\r\n                    <span className=\"align-middle text-black-50 mb-2\">\r\n                      Delete\r\n                    </span>\r\n                  </h6>\r\n                </DropdownItem>\r\n              </DropdownMenu>{\" \"}\r\n            </UncontrolledDropdown>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {props.getPanenList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getPanenList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Link to=\"/create-panen\">\r\n                <button type=\"button\" className=\"btn btn-light rounded\">\r\n                  <span>\r\n                    Tambah Panen <UserPlus className=\"ml-2 mb-1\" size={20} />\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"float-right\">\r\n                <SearchBar {...props.searchProps} placeholder=\"Search...\" />\r\n              </div>\r\n              <div className=\"table-responsive-lg\">\r\n                <BootstrapTable\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory(options)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorPanenList ? (\r\n            <h2>{props.errorPanenList}</h2>\r\n          ) : (\r\n            <Spinner colors=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponentPanen);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\component\\Calender\\EventCalender.js",["319"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Calendar } from \"react-feather\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\n\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport { getPupukList } from \"../../actions/pupukAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getPupukList: state.pupuk.getPupukList,\r\n    errorPupukList: state.pupuk.errorPupukList,\r\n  };\r\n};\r\n\r\nclass EventCalender extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getPupukList());\r\n  }\r\n\r\n  getData() {\r\n    const arr = [];\r\n\r\n    let i = 0;\r\n    for (i = 0; i < this.props.getPupukList.length; i++) {\r\n      arr.push({\r\n        // title: this.props.getPupukList[i].jenis_pupuk,\r\n        date: this.props.getPupukList[i].tgl_distribusi,\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    const data = this.getData();\r\n\r\n    console.log(data);\r\n    return (\r\n      <>\r\n        <div>\r\n          {data.length ? (\r\n            <>\r\n              <FullCalendar\r\n                plugins={[dayGridPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={data}\r\n              />\r\n              <div\r\n                className=\"scroll_calender border-top  border-secondary overflow-auto   mt-3 py-3\"\r\n                style={{ height: \"325px\" }}\r\n              >\r\n                <ul>\r\n                  {this.props.getPupukList.map((items) => {\r\n                    return (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"text-secondary align-baseline\">\r\n                            <Calendar className=\"mb-1 mr-2\" size={18} />\r\n                            <small>{items.tgl_distribusi}</small>\r\n                          </span>\r\n                          <h6>\r\n                            {items.jenis_pupuk} dikirimkan ke {items.petani}\r\n                          </h6>\r\n                        </li>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div></div>\r\n            </>\r\n          ) : (\r\n            <div className=\" d-flex justify-content-center \">\r\n              <div className=\"spinner-border text-info \" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EventCalender);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\UserValidation.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormPict.js",["320","321"],"import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { putUsersUpdateImage, delleteDataPict } from \"../../actions/userAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.users.getUsersDetail.id,\r\n      foto_profil: state.users.getUsersDetail.foto_profil,\r\n      foto_kk: state.users.getUsersDetail.foto_kk,\r\n      foto_ktp: state.users.getUsersDetail.foto_ktp,\r\n    },\r\n    image: {\r\n      getResponseDataPict: state.users.getResponseDataPict,\r\n      errorResponseDataPict: state.users.errorResponseDataPict,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormPict extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      base64URL: \"\",\r\n    };\r\n  }\r\n  getBase64 = (file) => {\r\n    return new Promise((resolve) => {\r\n      let fileInfo;\r\n      let baseURL = \"\";\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        // Make a fileInfo Object\r\n        // console.log(\"Called\", reader);\r\n        baseURL = reader.result;\r\n        // console.log(baseURL);\r\n        resolve(baseURL);\r\n      };\r\n      // console.log(fileInfo);\r\n    });\r\n  };\r\n\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{label}\" className=\"col-form-label text-secondary\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        {label === \"Foto KTP\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_ktp: this.value,\r\n                      })\r\n                    );\r\n\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : label === \"Foto Profil\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_profil: this.value,\r\n                      })\r\n                    );\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : label === \"Foto KK\" ? (\r\n          <>\r\n            <Input\r\n              {...input}\r\n              type={type}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n\r\n                let { file } = this.state;\r\n\r\n                file = e.target.files[0];\r\n\r\n                this.getBase64(file)\r\n                  .then((result) => {\r\n                    file[\"base64\"] = result;\r\n                    console.log(\"File Is\", file.base64);\r\n                    this.value = file.base64;\r\n                    console.log(this.props.initialValues.id);\r\n                    this.props.dispatch(\r\n                      putUsersUpdateImage({\r\n                        id: this.props.initialValues.id,\r\n                        foto_kk: this.value,\r\n                      })\r\n                    );\r\n                    console.log(this.value);\r\n                    this.setState({\r\n                      base64URL: result,\r\n                      file,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            ></Input>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {touched &&\r\n          ((error && <small style={{ color: \"red\" }}>{error}</small>) ||\r\n            (warning && <span style={{ color: \"brown\" }}>{warning}</span>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    console.log(this.props.image);\r\n    if (\r\n      this.props.image.getResponseDataPict ||\r\n      this.props.image.errorResponseDataPict\r\n    ) {\r\n      if (this.props.image.errorResponseDataPict) {\r\n        swal(\"Failed!\", this.props.image.errorResponseDataPict, \"error\");\r\n        this.props.dispatch(delleteDataPict());\r\n      } else {\r\n        this.props.dispatch(delleteDataPict());\r\n        swal({\r\n          title: \"Foto Updated !\",\r\n          icon: \"success\",\r\n          button: \"Oke\",\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.props.handleSubmit}>\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_ktp\"\r\n                component={this.renderField}\r\n                label=\"Foto KTP\"\r\n              />\r\n            </Col>{\" \"}\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_profil\"\r\n                component={this.renderField}\r\n                label=\"Foto Profil\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Field\r\n                type=\"file\"\r\n                name=\"foto_kk\"\r\n                component={this.renderField}\r\n                label=\"Foto KK\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormPict = reduxForm({\r\n  form: \"UpdateImage\",\r\n  // validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormPict);\r\nexport default connect(mapStateToProps, null)(FormPict);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\reducers\\admin.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\actions\\adminAction.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\pages\\PrivatePages\\Admin\\Admin.js",[],"F:\\Kodingan\\React\\Tanipedia\\src\\component\\Form\\FormAdmin.js",["322"],"import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport AdminValidation from \"../../Validations/AdminValidation\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.admin.postRegister.id,\r\n      username: state.admin.postRegister.username,\r\n      password: state.admin.postRegister.password,\r\n      email: state.admin.postRegister.email,\r\n      telp: state.admin.postRegister.telp,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderField = ({\r\n    input,\r\n    type,\r\n    placeholder,\r\n    label,\r\n    value,\r\n    meta: { touched, error, warning },\r\n  }) => (\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <Label htmlFor=\"{label}\" className=\"col-form-label text-secondary\">\r\n          {label}\r\n        </Label>\r\n      </Col>\r\n      <Col md=\"12\">\r\n        <Input\r\n          {...input}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          autoComplete=\"off\"\r\n          required\r\n        ></Input>\r\n        {touched &&\r\n          ((error && <small style={{ color: \"red\" }}>{error}</small>) ||\r\n            (warning && <span style={{ color: \"brown\" }}>{warning}</span>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.props.handleSubmit}>\r\n          {/* <h4 className=\"text-black-50 mt-4\">Register </h4> */}\r\n          <FormGroup row>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  component={this.renderField}\r\n                  label=\"Username\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  component={this.renderField}\r\n                  label=\"Password\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"telp\"\r\n                  component={this.renderField}\r\n                  label=\"Nomor Telpon\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  component={this.renderField}\r\n                  label=\"Email\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Col md=\"12\">\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"info\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Simpan\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormAdmin = reduxForm({\r\n  form: \"CreateAdmin\",\r\n  validate: AdminValidation,\r\n  enableReinitialize: true,\r\n})(FormAdmin);\r\nexport default connect(mapStateToProps, null)(FormAdmin);\r\n","F:\\Kodingan\\React\\Tanipedia\\src\\Validations\\AdminValidation.js",[],{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":26},{"ruleId":"327","severity":1,"message":"331","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":15},{"ruleId":"327","severity":1,"message":"332","line":2,"column":52,"nodeType":"329","messageId":"330","endLine":2,"endColumn":56},{"ruleId":"327","severity":1,"message":"333","line":6,"column":3,"nodeType":"329","messageId":"330","endLine":6,"endColumn":16},{"ruleId":"327","severity":1,"message":"334","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":11},{"ruleId":"327","severity":1,"message":"335","line":18,"column":9,"nodeType":"329","messageId":"330","endLine":18,"endColumn":21},{"ruleId":"336","severity":1,"message":"337","line":11,"column":9,"nodeType":"338","endLine":11,"endColumn":59},{"ruleId":"327","severity":1,"message":"339","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":16},{"ruleId":"327","severity":1,"message":"340","line":3,"column":18,"nodeType":"329","messageId":"330","endLine":3,"endColumn":22},{"ruleId":"327","severity":1,"message":"341","line":3,"column":24,"nodeType":"329","messageId":"330","endLine":3,"endColumn":29},{"ruleId":"327","severity":1,"message":"342","line":3,"column":31,"nodeType":"329","messageId":"330","endLine":3,"endColumn":40},{"ruleId":"327","severity":1,"message":"343","line":3,"column":42,"nodeType":"329","messageId":"330","endLine":3,"endColumn":51},{"ruleId":"327","severity":1,"message":"344","line":5,"column":26,"nodeType":"329","messageId":"330","endLine":5,"endColumn":33},{"ruleId":"327","severity":1,"message":"345","line":11,"column":9,"nodeType":"329","messageId":"330","endLine":11,"endColumn":16},{"ruleId":"327","severity":1,"message":"343","line":2,"column":10,"nodeType":"329","messageId":"330","endLine":2,"endColumn":19},{"ruleId":"346","severity":1,"message":"347","line":12,"column":5,"nodeType":"348","messageId":"349","endLine":12,"endColumn":27},{"ruleId":"327","severity":1,"message":"343","line":2,"column":10,"nodeType":"329","messageId":"330","endLine":2,"endColumn":19},{"ruleId":"327","severity":1,"message":"344","line":11,"column":10,"nodeType":"329","messageId":"330","endLine":11,"endColumn":17},{"ruleId":"336","severity":1,"message":"337","line":36,"column":21,"nodeType":"338","endLine":36,"endColumn":48},{"ruleId":"336","severity":1,"message":"337","line":55,"column":21,"nodeType":"338","endLine":55,"endColumn":49},{"ruleId":"336","severity":1,"message":"337","line":74,"column":21,"nodeType":"338","endLine":74,"endColumn":52},{"ruleId":"336","severity":1,"message":"337","line":93,"column":21,"nodeType":"338","endLine":93,"endColumn":62},{"ruleId":"336","severity":1,"message":"337","line":113,"column":21,"nodeType":"338","endLine":113,"endColumn":51},{"ruleId":"336","severity":1,"message":"337","line":132,"column":21,"nodeType":"338","endLine":132,"endColumn":51},{"ruleId":"327","severity":1,"message":"343","line":2,"column":10,"nodeType":"329","messageId":"330","endLine":2,"endColumn":19},{"ruleId":"327","severity":1,"message":"350","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":22},{"ruleId":"351","severity":1,"message":"352","line":107,"column":19,"nodeType":"353","endLine":107,"endColumn":29},{"ruleId":"351","severity":1,"message":"352","line":109,"column":19,"nodeType":"353","endLine":109,"endColumn":29},{"ruleId":"354","severity":1,"message":"355","line":134,"column":17,"nodeType":"356","messageId":"357","endLine":136,"endColumn":18},{"ruleId":"327","severity":1,"message":"339","line":4,"column":3,"nodeType":"329","messageId":"330","endLine":4,"endColumn":9},{"ruleId":"327","severity":1,"message":"358","line":6,"column":3,"nodeType":"329","messageId":"330","endLine":6,"endColumn":8},{"ruleId":"327","severity":1,"message":"359","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":8},{"ruleId":"327","severity":1,"message":"339","line":4,"column":3,"nodeType":"329","messageId":"330","endLine":4,"endColumn":9},{"ruleId":"327","severity":1,"message":"358","line":6,"column":3,"nodeType":"329","messageId":"330","endLine":6,"endColumn":8},{"ruleId":"327","severity":1,"message":"359","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":8},{"ruleId":"327","severity":1,"message":"360","line":18,"column":22,"nodeType":"329","messageId":"330","endLine":18,"endColumn":34},{"ruleId":"327","severity":1,"message":"361","line":19,"column":52,"nodeType":"329","messageId":"330","endLine":19,"endColumn":56},{"ruleId":"327","severity":1,"message":"362","line":21,"column":8,"nodeType":"329","messageId":"330","endLine":21,"endColumn":14},{"ruleId":"336","severity":1,"message":"337","line":110,"column":19,"nodeType":"338","endLine":113,"endColumn":20},{"ruleId":"336","severity":1,"message":"337","line":115,"column":19,"nodeType":"338","endLine":118,"endColumn":20},{"ruleId":"346","severity":1,"message":"363","line":24,"column":7,"nodeType":"348","messageId":"349","endLine":24,"endColumn":16},{"ruleId":"327","severity":1,"message":"364","line":4,"column":21,"nodeType":"329","messageId":"330","endLine":4,"endColumn":28},{"ruleId":"327","severity":1,"message":"364","line":4,"column":21,"nodeType":"329","messageId":"330","endLine":4,"endColumn":28},{"ruleId":"327","severity":1,"message":"365","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":13},{"ruleId":"327","severity":1,"message":"358","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":15},{"ruleId":"327","severity":1,"message":"364","line":5,"column":21,"nodeType":"329","messageId":"330","endLine":5,"endColumn":28},{"ruleId":"327","severity":1,"message":"365","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":13},{"ruleId":"327","severity":1,"message":"358","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":15},{"ruleId":"327","severity":1,"message":"364","line":4,"column":21,"nodeType":"329","messageId":"330","endLine":4,"endColumn":28},{"ruleId":"327","severity":1,"message":"365","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":13},{"ruleId":"327","severity":1,"message":"366","line":95,"column":11,"nodeType":"329","messageId":"330","endLine":95,"endColumn":19},{"ruleId":"354","severity":1,"message":"355","line":254,"column":17,"nodeType":"356","messageId":"357","endLine":256,"endColumn":18},{"ruleId":"327","severity":1,"message":"343","line":4,"column":3,"nodeType":"329","messageId":"330","endLine":4,"endColumn":12},{"ruleId":"327","severity":1,"message":"339","line":5,"column":3,"nodeType":"329","messageId":"330","endLine":5,"endColumn":9},{"ruleId":"327","severity":1,"message":"358","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":8},{"ruleId":"327","severity":1,"message":"359","line":8,"column":3,"nodeType":"329","messageId":"330","endLine":8,"endColumn":8},{"ruleId":"367","severity":1,"message":"368","line":17,"column":3,"nodeType":"369","messageId":"370","endLine":19,"endColumn":4},{"ruleId":"327","severity":1,"message":"339","line":2,"column":51,"nodeType":"329","messageId":"330","endLine":2,"endColumn":57},{"ruleId":"327","severity":1,"message":"366","line":33,"column":11,"nodeType":"329","messageId":"330","endLine":33,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":20,"column":3,"nodeType":"369","messageId":"370","endLine":22,"endColumn":4},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","'Plus' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'toggleTopbar' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Container' is defined but never used.","'getData' is defined but never used.","'history' is assigned a value but never used.","no-dupe-keys","Duplicate key 'errorResponseDataPupuk'.","ObjectExpression","unexpected","'UserValidation' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Table' is defined but never used.","'Badge' is defined but never used.","'getUsersList' is defined but never used.","'User' is defined but never used.","'Kirito' is defined but never used.","Duplicate key 'tgl_panen'.","'Spinner' is defined but never used.","'Photo' is defined but never used.","'fileInfo' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]